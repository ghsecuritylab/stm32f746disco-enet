ARM GAS  /tmp/ccao2DXB.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_RTC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_RTC_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	MX_RTC_Init:
  26              	.LFB138:
  27              		.file 1 "Src/rtc.c"
   1:Src/rtc.c     **** /**
   2:Src/rtc.c     ****   ******************************************************************************
   3:Src/rtc.c     ****   * File Name          : RTC.c
   4:Src/rtc.c     ****   * Description        : This file provides code for the configuration
   5:Src/rtc.c     ****   *                      of the RTC instances.
   6:Src/rtc.c     ****   ******************************************************************************
   7:Src/rtc.c     ****   * This notice applies to any and all portions of this file
   8:Src/rtc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/rtc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/rtc.c     ****   * inserted by the user or by software development tools
  11:Src/rtc.c     ****   * are owned by their respective copyright owners.
  12:Src/rtc.c     ****   *
  13:Src/rtc.c     ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/rtc.c     ****   * All rights reserved.
  15:Src/rtc.c     ****   *
  16:Src/rtc.c     ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/rtc.c     ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/rtc.c     ****   *
  19:Src/rtc.c     ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/rtc.c     ****   *    this list of conditions and the following disclaimer.
  21:Src/rtc.c     ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/rtc.c     ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/rtc.c     ****   *    and/or other materials provided with the distribution.
  24:Src/rtc.c     ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/rtc.c     ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/rtc.c     ****   *    derived from this software without specific written permission.
  27:Src/rtc.c     ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/rtc.c     ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/rtc.c     ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/rtc.c     ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/rtc.c     ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccao2DXB.s 			page 2


  32:Src/rtc.c     ****   *    this license. 
  33:Src/rtc.c     ****   *
  34:Src/rtc.c     ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/rtc.c     ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/rtc.c     ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/rtc.c     ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/rtc.c     ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/rtc.c     ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/rtc.c     ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/rtc.c     ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/rtc.c     ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/rtc.c     ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/rtc.c     ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/rtc.c     ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/rtc.c     ****   *
  47:Src/rtc.c     ****   ******************************************************************************
  48:Src/rtc.c     ****   */
  49:Src/rtc.c     **** 
  50:Src/rtc.c     **** /* Includes ------------------------------------------------------------------*/
  51:Src/rtc.c     **** #include "rtc.h"
  52:Src/rtc.c     **** 
  53:Src/rtc.c     **** /* USER CODE BEGIN 0 */
  54:Src/rtc.c     **** 
  55:Src/rtc.c     **** /* USER CODE END 0 */
  56:Src/rtc.c     **** 
  57:Src/rtc.c     **** RTC_HandleTypeDef hrtc;
  58:Src/rtc.c     **** 
  59:Src/rtc.c     **** /* RTC init function */
  60:Src/rtc.c     **** void MX_RTC_Init(void)
  61:Src/rtc.c     **** {
  28              		.loc 1 61 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 72
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 93B0     		sub	sp, sp, #76
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 80
  62:Src/rtc.c     ****   RTC_TimeTypeDef sTime;
  63:Src/rtc.c     ****   RTC_DateTypeDef sDate;
  64:Src/rtc.c     ****   RTC_AlarmTypeDef sAlarm;
  65:Src/rtc.c     **** 
  66:Src/rtc.c     ****     /**Initialize RTC Only 
  67:Src/rtc.c     ****     */
  68:Src/rtc.c     ****   hrtc.Instance = RTC;
  39              		.loc 1 68 0
  40 0004 3C48     		ldr	r0, .L15
  41 0006 3D4B     		ldr	r3, .L15+4
  42 0008 0360     		str	r3, [r0]
  69:Src/rtc.c     ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
  43              		.loc 1 69 0
  44 000a 0023     		movs	r3, #0
  45 000c 4360     		str	r3, [r0, #4]
  70:Src/rtc.c     ****   hrtc.Init.AsynchPrediv = 127;
ARM GAS  /tmp/ccao2DXB.s 			page 3


  46              		.loc 1 70 0
  47 000e 7F22     		movs	r2, #127
  48 0010 8260     		str	r2, [r0, #8]
  71:Src/rtc.c     ****   hrtc.Init.SynchPrediv = 255;
  49              		.loc 1 71 0
  50 0012 FF22     		movs	r2, #255
  51 0014 C260     		str	r2, [r0, #12]
  72:Src/rtc.c     ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
  52              		.loc 1 72 0
  53 0016 0361     		str	r3, [r0, #16]
  73:Src/rtc.c     ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
  54              		.loc 1 73 0
  55 0018 4361     		str	r3, [r0, #20]
  74:Src/rtc.c     ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
  56              		.loc 1 74 0
  57 001a 8361     		str	r3, [r0, #24]
  75:Src/rtc.c     ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
  58              		.loc 1 75 0
  59 001c FFF7FEFF 		bl	HAL_RTC_Init
  60              	.LVL0:
  61 0020 0028     		cmp	r0, #0
  62 0022 4BD1     		bne	.L9
  63              	.L2:
  76:Src/rtc.c     ****   {
  77:Src/rtc.c     ****     _Error_Handler(__FILE__, __LINE__);
  78:Src/rtc.c     ****   }
  79:Src/rtc.c     ****   /* USER CODE BEGIN RTC_Init 2 */
  80:Src/rtc.c     **** 
  81:Src/rtc.c     ****   /* USER CODE END RTC_Init 2 */
  82:Src/rtc.c     **** 
  83:Src/rtc.c     ****     /**Initialize RTC and set the Time and Date 
  84:Src/rtc.c     ****     */
  85:Src/rtc.c     ****   sTime.Hours = 0x0;
  64              		.loc 1 85 0
  65 0024 0023     		movs	r3, #0
  66 0026 8DF83030 		strb	r3, [sp, #48]
  86:Src/rtc.c     ****   sTime.Minutes = 0x0;
  67              		.loc 1 86 0
  68 002a 8DF83130 		strb	r3, [sp, #49]
  87:Src/rtc.c     ****   sTime.Seconds = 0x0;
  69              		.loc 1 87 0
  70 002e 8DF83230 		strb	r3, [sp, #50]
  88:Src/rtc.c     ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
  71              		.loc 1 88 0
  72 0032 1093     		str	r3, [sp, #64]
  89:Src/rtc.c     ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
  73              		.loc 1 89 0
  74 0034 1193     		str	r3, [sp, #68]
  90:Src/rtc.c     ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
  75              		.loc 1 90 0
  76 0036 0122     		movs	r2, #1
  77 0038 0CA9     		add	r1, sp, #48
  78 003a 2F48     		ldr	r0, .L15
  79 003c FFF7FEFF 		bl	HAL_RTC_SetTime
  80              	.LVL1:
  81 0040 0028     		cmp	r0, #0
  82 0042 40D1     		bne	.L10
ARM GAS  /tmp/ccao2DXB.s 			page 4


  83              	.L3:
  91:Src/rtc.c     ****   {
  92:Src/rtc.c     ****     _Error_Handler(__FILE__, __LINE__);
  93:Src/rtc.c     ****   }
  94:Src/rtc.c     ****   /* USER CODE BEGIN RTC_Init 3 */
  95:Src/rtc.c     **** 
  96:Src/rtc.c     ****   /* USER CODE END RTC_Init 3 */
  97:Src/rtc.c     **** 
  98:Src/rtc.c     ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
  84              		.loc 1 98 0
  85 0044 0122     		movs	r2, #1
  86 0046 8DF82C20 		strb	r2, [sp, #44]
  99:Src/rtc.c     ****   sDate.Month = RTC_MONTH_JANUARY;
  87              		.loc 1 99 0
  88 004a 8DF82D20 		strb	r2, [sp, #45]
 100:Src/rtc.c     ****   sDate.Date = 0x1;
  89              		.loc 1 100 0
  90 004e 8DF82E20 		strb	r2, [sp, #46]
 101:Src/rtc.c     ****   sDate.Year = 0x0;
  91              		.loc 1 101 0
  92 0052 0023     		movs	r3, #0
  93 0054 8DF82F30 		strb	r3, [sp, #47]
 102:Src/rtc.c     **** 
 103:Src/rtc.c     ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
  94              		.loc 1 103 0
  95 0058 0BA9     		add	r1, sp, #44
  96 005a 2748     		ldr	r0, .L15
  97 005c FFF7FEFF 		bl	HAL_RTC_SetDate
  98              	.LVL2:
  99 0060 0028     		cmp	r0, #0
 100 0062 35D1     		bne	.L11
 101              	.L4:
 104:Src/rtc.c     ****   {
 105:Src/rtc.c     ****     _Error_Handler(__FILE__, __LINE__);
 106:Src/rtc.c     ****   }
 107:Src/rtc.c     ****   /* USER CODE BEGIN RTC_Init 4 */
 108:Src/rtc.c     **** 
 109:Src/rtc.c     ****   /* USER CODE END RTC_Init 4 */
 110:Src/rtc.c     **** 
 111:Src/rtc.c     ****     /**Enable the Alarm A 
 112:Src/rtc.c     ****     */
 113:Src/rtc.c     ****   sAlarm.AlarmTime.Hours = 0x0;
 102              		.loc 1 113 0
 103 0064 0023     		movs	r3, #0
 104 0066 8DF80030 		strb	r3, [sp]
 114:Src/rtc.c     ****   sAlarm.AlarmTime.Minutes = 0x0;
 105              		.loc 1 114 0
 106 006a 8DF80130 		strb	r3, [sp, #1]
 115:Src/rtc.c     ****   sAlarm.AlarmTime.Seconds = 0x0;
 107              		.loc 1 115 0
 108 006e 8DF80230 		strb	r3, [sp, #2]
 116:Src/rtc.c     ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 109              		.loc 1 116 0
 110 0072 0193     		str	r3, [sp, #4]
 117:Src/rtc.c     ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 111              		.loc 1 117 0
 112 0074 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccao2DXB.s 			page 5


 118:Src/rtc.c     ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 113              		.loc 1 118 0
 114 0076 0593     		str	r3, [sp, #20]
 119:Src/rtc.c     ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 115              		.loc 1 119 0
 116 0078 0693     		str	r3, [sp, #24]
 120:Src/rtc.c     ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 117              		.loc 1 120 0
 118 007a 0793     		str	r3, [sp, #28]
 121:Src/rtc.c     ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 119              		.loc 1 121 0
 120 007c 0893     		str	r3, [sp, #32]
 122:Src/rtc.c     ****   sAlarm.AlarmDateWeekDay = 0x1;
 121              		.loc 1 122 0
 122 007e 0122     		movs	r2, #1
 123 0080 8DF82420 		strb	r2, [sp, #36]
 123:Src/rtc.c     ****   sAlarm.Alarm = RTC_ALARM_A;
 124              		.loc 1 123 0
 125 0084 4FF48073 		mov	r3, #256
 126 0088 0A93     		str	r3, [sp, #40]
 124:Src/rtc.c     ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 127              		.loc 1 124 0
 128 008a 6946     		mov	r1, sp
 129 008c 1A48     		ldr	r0, .L15
 130 008e FFF7FEFF 		bl	HAL_RTC_SetAlarm
 131              	.LVL3:
 132 0092 10BB     		cbnz	r0, .L12
 133              	.L5:
 125:Src/rtc.c     ****   {
 126:Src/rtc.c     ****     _Error_Handler(__FILE__, __LINE__);
 127:Src/rtc.c     ****   }
 128:Src/rtc.c     ****   /* USER CODE BEGIN RTC_Init 5 */
 129:Src/rtc.c     **** 
 130:Src/rtc.c     ****   /* USER CODE END RTC_Init 5 */
 131:Src/rtc.c     **** 
 132:Src/rtc.c     ****     /**Enable the Alarm B 
 133:Src/rtc.c     ****     */
 134:Src/rtc.c     ****   sAlarm.AlarmDateWeekDay = 0x1;
 134              		.loc 1 134 0
 135 0094 0122     		movs	r2, #1
 136 0096 8DF82420 		strb	r2, [sp, #36]
 135:Src/rtc.c     ****   sAlarm.Alarm = RTC_ALARM_B;
 137              		.loc 1 135 0
 138 009a 4FF40073 		mov	r3, #512
 139 009e 0A93     		str	r3, [sp, #40]
 136:Src/rtc.c     ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 140              		.loc 1 136 0
 141 00a0 6946     		mov	r1, sp
 142 00a2 1548     		ldr	r0, .L15
 143 00a4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 144              	.LVL4:
 145 00a8 E0B9     		cbnz	r0, .L13
 146              	.L6:
 137:Src/rtc.c     ****   {
 138:Src/rtc.c     ****     _Error_Handler(__FILE__, __LINE__);
 139:Src/rtc.c     ****   }
 140:Src/rtc.c     ****   /* USER CODE BEGIN RTC_Init 6 */
ARM GAS  /tmp/ccao2DXB.s 			page 6


 141:Src/rtc.c     **** 
 142:Src/rtc.c     ****   /* USER CODE END RTC_Init 6 */
 143:Src/rtc.c     **** 
 144:Src/rtc.c     ****     /**Enable the TimeStamp 
 145:Src/rtc.c     ****     */
 146:Src/rtc.c     ****   if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 147              		.loc 1 146 0
 148 00aa 0222     		movs	r2, #2
 149 00ac 0021     		movs	r1, #0
 150 00ae 1248     		ldr	r0, .L15
 151 00b0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 152              	.LVL5:
 153 00b4 D8B9     		cbnz	r0, .L14
 154              	.L1:
 147:Src/rtc.c     ****   {
 148:Src/rtc.c     ****     _Error_Handler(__FILE__, __LINE__);
 149:Src/rtc.c     ****   }
 150:Src/rtc.c     ****   /* USER CODE BEGIN RTC_Init 7 */
 151:Src/rtc.c     **** 
 152:Src/rtc.c     ****   /* USER CODE END RTC_Init 7 */
 153:Src/rtc.c     **** 
 154:Src/rtc.c     **** }
 155              		.loc 1 154 0
 156 00b6 13B0     		add	sp, sp, #76
 157              	.LCFI2:
 158              		.cfi_remember_state
 159              		.cfi_def_cfa_offset 4
 160              		@ sp needed
 161 00b8 5DF804FB 		ldr	pc, [sp], #4
 162              	.L9:
 163              	.LCFI3:
 164              		.cfi_restore_state
  77:Src/rtc.c     ****   }
 165              		.loc 1 77 0
 166 00bc 4D21     		movs	r1, #77
 167 00be 1048     		ldr	r0, .L15+8
 168 00c0 FFF7FEFF 		bl	_Error_Handler
 169              	.LVL6:
 170 00c4 AEE7     		b	.L2
 171              	.L10:
  92:Src/rtc.c     ****   }
 172              		.loc 1 92 0
 173 00c6 5C21     		movs	r1, #92
 174 00c8 0D48     		ldr	r0, .L15+8
 175 00ca FFF7FEFF 		bl	_Error_Handler
 176              	.LVL7:
 177 00ce B9E7     		b	.L3
 178              	.L11:
 105:Src/rtc.c     ****   }
 179              		.loc 1 105 0
 180 00d0 6921     		movs	r1, #105
 181 00d2 0B48     		ldr	r0, .L15+8
 182 00d4 FFF7FEFF 		bl	_Error_Handler
 183              	.LVL8:
 184 00d8 C4E7     		b	.L4
 185              	.L12:
 126:Src/rtc.c     ****   }
ARM GAS  /tmp/ccao2DXB.s 			page 7


 186              		.loc 1 126 0
 187 00da 7E21     		movs	r1, #126
 188 00dc 0848     		ldr	r0, .L15+8
 189 00de FFF7FEFF 		bl	_Error_Handler
 190              	.LVL9:
 191 00e2 D7E7     		b	.L5
 192              	.L13:
 138:Src/rtc.c     ****   }
 193              		.loc 1 138 0
 194 00e4 8A21     		movs	r1, #138
 195 00e6 0648     		ldr	r0, .L15+8
 196 00e8 FFF7FEFF 		bl	_Error_Handler
 197              	.LVL10:
 198 00ec DDE7     		b	.L6
 199              	.L14:
 148:Src/rtc.c     ****   }
 200              		.loc 1 148 0
 201 00ee 9421     		movs	r1, #148
 202 00f0 0348     		ldr	r0, .L15+8
 203 00f2 FFF7FEFF 		bl	_Error_Handler
 204              	.LVL11:
 205              		.loc 1 154 0
 206 00f6 DEE7     		b	.L1
 207              	.L16:
 208              		.align	2
 209              	.L15:
 210 00f8 00000000 		.word	hrtc
 211 00fc 00280040 		.word	1073752064
 212 0100 00000000 		.word	.LC0
 213              		.cfi_endproc
 214              	.LFE138:
 216              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 217              		.align	1
 218              		.global	HAL_RTC_MspInit
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv5-sp-d16
 224              	HAL_RTC_MspInit:
 225              	.LFB139:
 155:Src/rtc.c     **** 
 156:Src/rtc.c     **** void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
 157:Src/rtc.c     **** {
 226              		.loc 1 157 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231              	.LVL12:
 158:Src/rtc.c     **** 
 159:Src/rtc.c     ****   if(rtcHandle->Instance==RTC)
 232              		.loc 1 159 0
 233 0000 0268     		ldr	r2, [r0]
 234 0002 054B     		ldr	r3, .L20
 235 0004 9A42     		cmp	r2, r3
 236 0006 00D0     		beq	.L19
 237              	.L17:
ARM GAS  /tmp/ccao2DXB.s 			page 8


 160:Src/rtc.c     ****   {
 161:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspInit 0 */
 162:Src/rtc.c     **** 
 163:Src/rtc.c     ****   /* USER CODE END RTC_MspInit 0 */
 164:Src/rtc.c     ****     /* RTC clock enable */
 165:Src/rtc.c     ****     __HAL_RCC_RTC_ENABLE();
 166:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspInit 1 */
 167:Src/rtc.c     **** 
 168:Src/rtc.c     ****   /* USER CODE END RTC_MspInit 1 */
 169:Src/rtc.c     ****   }
 170:Src/rtc.c     **** }
 238              		.loc 1 170 0
 239 0008 7047     		bx	lr
 240              	.L19:
 165:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspInit 1 */
 241              		.loc 1 165 0
 242 000a 044A     		ldr	r2, .L20+4
 243 000c 136F     		ldr	r3, [r2, #112]
 244 000e 43F40043 		orr	r3, r3, #32768
 245 0012 1367     		str	r3, [r2, #112]
 246              		.loc 1 170 0
 247 0014 F8E7     		b	.L17
 248              	.L21:
 249 0016 00BF     		.align	2
 250              	.L20:
 251 0018 00280040 		.word	1073752064
 252 001c 00380240 		.word	1073887232
 253              		.cfi_endproc
 254              	.LFE139:
 256              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 257              		.align	1
 258              		.global	HAL_RTC_MspDeInit
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv5-sp-d16
 264              	HAL_RTC_MspDeInit:
 265              	.LFB140:
 171:Src/rtc.c     **** 
 172:Src/rtc.c     **** void HAL_RTC_MspDeInit(RTC_HandleTypeDef* rtcHandle)
 173:Src/rtc.c     **** {
 266              		.loc 1 173 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271              	.LVL13:
 174:Src/rtc.c     **** 
 175:Src/rtc.c     ****   if(rtcHandle->Instance==RTC)
 272              		.loc 1 175 0
 273 0000 0268     		ldr	r2, [r0]
 274 0002 054B     		ldr	r3, .L25
 275 0004 9A42     		cmp	r2, r3
 276 0006 00D0     		beq	.L24
 277              	.L22:
 176:Src/rtc.c     ****   {
 177:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspDeInit 0 */
ARM GAS  /tmp/ccao2DXB.s 			page 9


 178:Src/rtc.c     **** 
 179:Src/rtc.c     ****   /* USER CODE END RTC_MspDeInit 0 */
 180:Src/rtc.c     ****     /* Peripheral clock disable */
 181:Src/rtc.c     ****     __HAL_RCC_RTC_DISABLE();
 182:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 183:Src/rtc.c     **** 
 184:Src/rtc.c     ****   /* USER CODE END RTC_MspDeInit 1 */
 185:Src/rtc.c     ****   }
 186:Src/rtc.c     **** } 
 278              		.loc 1 186 0
 279 0008 7047     		bx	lr
 280              	.L24:
 181:Src/rtc.c     ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 281              		.loc 1 181 0
 282 000a 044A     		ldr	r2, .L25+4
 283 000c 136F     		ldr	r3, [r2, #112]
 284 000e 23F40043 		bic	r3, r3, #32768
 285 0012 1367     		str	r3, [r2, #112]
 286              		.loc 1 186 0
 287 0014 F8E7     		b	.L22
 288              	.L26:
 289 0016 00BF     		.align	2
 290              	.L25:
 291 0018 00280040 		.word	1073752064
 292 001c 00380240 		.word	1073887232
 293              		.cfi_endproc
 294              	.LFE140:
 296              		.comm	hrtc,32,4
 297              		.section	.rodata.MX_RTC_Init.str1.4,"aMS",%progbits,1
 298              		.align	2
 299              	.LC0:
 300 0000 5372632F 		.ascii	"Src/rtc.c\000"
 300      7274632E 
 300      6300
 301              		.text
 302              	.Letext0:
 303              		.file 2 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_defa
 304              		.file 3 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h
 305              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 306              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 307              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 308              		.file 7 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 309              		.file 8 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 310              		.file 9 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include
 311              		.file 10 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 312              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 313              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 314              		.file 13 "Inc/rtc.h"
 315              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
ARM GAS  /tmp/ccao2DXB.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 rtc.c
     /tmp/ccao2DXB.s:18     .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccao2DXB.s:25     .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccao2DXB.s:210    .text.MX_RTC_Init:00000000000000f8 $d
                            *COM*:0000000000000020 hrtc
     /tmp/ccao2DXB.s:217    .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/ccao2DXB.s:224    .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/ccao2DXB.s:251    .text.HAL_RTC_MspInit:0000000000000018 $d
     /tmp/ccao2DXB.s:257    .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/ccao2DXB.s:264    .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/ccao2DXB.s:291    .text.HAL_RTC_MspDeInit:0000000000000018 $d
     /tmp/ccao2DXB.s:298    .rodata.MX_RTC_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
_Error_Handler
