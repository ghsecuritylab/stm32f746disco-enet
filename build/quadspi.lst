ARM GAS  /tmp/ccINLlqj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"quadspi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_QUADSPI_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	MX_QUADSPI_Init:
  26              	.LFB138:
  27              		.file 1 "Src/quadspi.c"
   1:Src/quadspi.c **** /**
   2:Src/quadspi.c ****   ******************************************************************************
   3:Src/quadspi.c ****   * File Name          : QUADSPI.c
   4:Src/quadspi.c ****   * Description        : This file provides code for the configuration
   5:Src/quadspi.c ****   *                      of the QUADSPI instances.
   6:Src/quadspi.c ****   ******************************************************************************
   7:Src/quadspi.c ****   * This notice applies to any and all portions of this file
   8:Src/quadspi.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/quadspi.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/quadspi.c ****   * inserted by the user or by software development tools
  11:Src/quadspi.c ****   * are owned by their respective copyright owners.
  12:Src/quadspi.c ****   *
  13:Src/quadspi.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/quadspi.c ****   * All rights reserved.
  15:Src/quadspi.c ****   *
  16:Src/quadspi.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/quadspi.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/quadspi.c ****   *
  19:Src/quadspi.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/quadspi.c ****   *    this list of conditions and the following disclaimer.
  21:Src/quadspi.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/quadspi.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/quadspi.c ****   *    and/or other materials provided with the distribution.
  24:Src/quadspi.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/quadspi.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/quadspi.c ****   *    derived from this software without specific written permission.
  27:Src/quadspi.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/quadspi.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/quadspi.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/quadspi.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/quadspi.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccINLlqj.s 			page 2


  32:Src/quadspi.c ****   *    this license. 
  33:Src/quadspi.c ****   *
  34:Src/quadspi.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/quadspi.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/quadspi.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/quadspi.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/quadspi.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/quadspi.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/quadspi.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/quadspi.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/quadspi.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/quadspi.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/quadspi.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/quadspi.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/quadspi.c ****   *
  47:Src/quadspi.c ****   ******************************************************************************
  48:Src/quadspi.c ****   */
  49:Src/quadspi.c **** 
  50:Src/quadspi.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/quadspi.c **** #include "quadspi.h"
  52:Src/quadspi.c **** 
  53:Src/quadspi.c **** #include "gpio.h"
  54:Src/quadspi.c **** 
  55:Src/quadspi.c **** /* USER CODE BEGIN 0 */
  56:Src/quadspi.c **** 
  57:Src/quadspi.c **** /* USER CODE END 0 */
  58:Src/quadspi.c **** 
  59:Src/quadspi.c **** QSPI_HandleTypeDef hqspi;
  60:Src/quadspi.c **** 
  61:Src/quadspi.c **** /* QUADSPI init function */
  62:Src/quadspi.c **** void MX_QUADSPI_Init(void)
  63:Src/quadspi.c **** {
  28              		.loc 1 63 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  64:Src/quadspi.c **** 
  65:Src/quadspi.c ****   hqspi.Instance = QUADSPI;
  37              		.loc 1 65 0
  38 0002 0B48     		ldr	r0, .L5
  39 0004 0B4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  66:Src/quadspi.c ****   hqspi.Init.ClockPrescaler = 255;
  41              		.loc 1 66 0
  42 0008 FF23     		movs	r3, #255
  43 000a 4360     		str	r3, [r0, #4]
  67:Src/quadspi.c ****   hqspi.Init.FifoThreshold = 1;
  44              		.loc 1 67 0
  45 000c 0122     		movs	r2, #1
  46 000e 8260     		str	r2, [r0, #8]
  68:Src/quadspi.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
  47              		.loc 1 68 0
ARM GAS  /tmp/ccINLlqj.s 			page 3


  48 0010 0023     		movs	r3, #0
  49 0012 C360     		str	r3, [r0, #12]
  69:Src/quadspi.c ****   hqspi.Init.FlashSize = 1;
  50              		.loc 1 69 0
  51 0014 0261     		str	r2, [r0, #16]
  70:Src/quadspi.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
  52              		.loc 1 70 0
  53 0016 4361     		str	r3, [r0, #20]
  71:Src/quadspi.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
  54              		.loc 1 71 0
  55 0018 8361     		str	r3, [r0, #24]
  72:Src/quadspi.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
  56              		.loc 1 72 0
  57 001a C361     		str	r3, [r0, #28]
  73:Src/quadspi.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
  58              		.loc 1 73 0
  59 001c 0362     		str	r3, [r0, #32]
  74:Src/quadspi.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
  60              		.loc 1 74 0
  61 001e FFF7FEFF 		bl	HAL_QSPI_Init
  62              	.LVL0:
  63 0022 00B9     		cbnz	r0, .L4
  64              	.L1:
  75:Src/quadspi.c ****   {
  76:Src/quadspi.c ****     _Error_Handler(__FILE__, __LINE__);
  77:Src/quadspi.c ****   }
  78:Src/quadspi.c **** 
  79:Src/quadspi.c **** }
  65              		.loc 1 79 0
  66 0024 08BD     		pop	{r3, pc}
  67              	.L4:
  76:Src/quadspi.c ****   }
  68              		.loc 1 76 0
  69 0026 4C21     		movs	r1, #76
  70 0028 0348     		ldr	r0, .L5+8
  71 002a FFF7FEFF 		bl	_Error_Handler
  72              	.LVL1:
  73              		.loc 1 79 0
  74 002e F9E7     		b	.L1
  75              	.L6:
  76              		.align	2
  77              	.L5:
  78 0030 00000000 		.word	hqspi
  79 0034 001000A0 		.word	-1610608640
  80 0038 00000000 		.word	.LC0
  81              		.cfi_endproc
  82              	.LFE138:
  84              		.section	.text.HAL_QSPI_MspInit,"ax",%progbits
  85              		.align	1
  86              		.global	HAL_QSPI_MspInit
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv5-sp-d16
  92              	HAL_QSPI_MspInit:
  93              	.LFB139:
  80:Src/quadspi.c **** 
ARM GAS  /tmp/ccINLlqj.s 			page 4


  81:Src/quadspi.c **** void HAL_QSPI_MspInit(QSPI_HandleTypeDef* qspiHandle)
  82:Src/quadspi.c **** {
  94              		.loc 1 82 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 24
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              	.LVL2:
  83:Src/quadspi.c **** 
  84:Src/quadspi.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  85:Src/quadspi.c ****   if(qspiHandle->Instance==QUADSPI)
  99              		.loc 1 85 0
 100 0000 0268     		ldr	r2, [r0]
 101 0002 254B     		ldr	r3, .L14
 102 0004 9A42     		cmp	r2, r3
 103 0006 00D0     		beq	.L13
 104 0008 7047     		bx	lr
 105              	.L13:
  82:Src/quadspi.c **** 
 106              		.loc 1 82 0
 107 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 28
 110              		.cfi_offset 4, -28
 111              		.cfi_offset 5, -24
 112              		.cfi_offset 6, -20
 113              		.cfi_offset 7, -16
 114              		.cfi_offset 8, -12
 115              		.cfi_offset 9, -8
 116              		.cfi_offset 14, -4
 117 000e 87B0     		sub	sp, sp, #28
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 56
 120              	.LBB2:
  86:Src/quadspi.c ****   {
  87:Src/quadspi.c ****   /* USER CODE BEGIN QUADSPI_MspInit 0 */
  88:Src/quadspi.c **** 
  89:Src/quadspi.c ****   /* USER CODE END QUADSPI_MspInit 0 */
  90:Src/quadspi.c ****     /* QUADSPI clock enable */
  91:Src/quadspi.c ****     __HAL_RCC_QSPI_CLK_ENABLE();
 121              		.loc 1 91 0
 122 0010 224B     		ldr	r3, .L14+4
 123 0012 9A6B     		ldr	r2, [r3, #56]
 124 0014 42F00202 		orr	r2, r2, #2
 125 0018 9A63     		str	r2, [r3, #56]
 126 001a 9B6B     		ldr	r3, [r3, #56]
 127 001c 03F00203 		and	r3, r3, #2
 128 0020 0093     		str	r3, [sp]
 129 0022 009B     		ldr	r3, [sp]
 130              	.LBE2:
  92:Src/quadspi.c ****   
  93:Src/quadspi.c ****     /**QUADSPI GPIO Configuration    
  94:Src/quadspi.c ****     PE2     ------> QUADSPI_BK1_IO2
  95:Src/quadspi.c ****     PB6     ------> QUADSPI_BK1_NCS
  96:Src/quadspi.c ****     PB2     ------> QUADSPI_CLK
  97:Src/quadspi.c ****     PD12     ------> QUADSPI_BK1_IO1
  98:Src/quadspi.c ****     PD13     ------> QUADSPI_BK1_IO3
  99:Src/quadspi.c ****     PD11     ------> QUADSPI_BK1_IO0 
ARM GAS  /tmp/ccINLlqj.s 			page 5


 100:Src/quadspi.c ****     */
 101:Src/quadspi.c ****     GPIO_InitStruct.Pin = QSPI_D2_Pin;
 131              		.loc 1 101 0
 132 0024 4FF00409 		mov	r9, #4
 133 0028 CDF80490 		str	r9, [sp, #4]
 102:Src/quadspi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 134              		.loc 1 102 0
 135 002c 0226     		movs	r6, #2
 136 002e 0296     		str	r6, [sp, #8]
 103:Src/quadspi.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 137              		.loc 1 103 0
 138 0030 0025     		movs	r5, #0
 139 0032 0395     		str	r5, [sp, #12]
 104:Src/quadspi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 140              		.loc 1 104 0
 141 0034 0324     		movs	r4, #3
 142 0036 0494     		str	r4, [sp, #16]
 105:Src/quadspi.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 143              		.loc 1 105 0
 144 0038 0927     		movs	r7, #9
 145 003a 0597     		str	r7, [sp, #20]
 106:Src/quadspi.c ****     HAL_GPIO_Init(QSPI_D2_GPIO_Port, &GPIO_InitStruct);
 146              		.loc 1 106 0
 147 003c 0DEB0901 		add	r1, sp, r9
 148 0040 1748     		ldr	r0, .L14+8
 149              	.LVL3:
 150 0042 FFF7FEFF 		bl	HAL_GPIO_Init
 151              	.LVL4:
 107:Src/quadspi.c **** 
 108:Src/quadspi.c ****     GPIO_InitStruct.Pin = QSPI_NCS_Pin;
 152              		.loc 1 108 0
 153 0046 4023     		movs	r3, #64
 154 0048 0193     		str	r3, [sp, #4]
 109:Src/quadspi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 155              		.loc 1 109 0
 156 004a 0296     		str	r6, [sp, #8]
 110:Src/quadspi.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 157              		.loc 1 110 0
 158 004c 0395     		str	r5, [sp, #12]
 111:Src/quadspi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 159              		.loc 1 111 0
 160 004e 0494     		str	r4, [sp, #16]
 112:Src/quadspi.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 161              		.loc 1 112 0
 162 0050 0A23     		movs	r3, #10
 163 0052 0593     		str	r3, [sp, #20]
 113:Src/quadspi.c ****     HAL_GPIO_Init(QSPI_NCS_GPIO_Port, &GPIO_InitStruct);
 164              		.loc 1 113 0
 165 0054 DFF85080 		ldr	r8, .L14+16
 166 0058 0DEB0901 		add	r1, sp, r9
 167 005c 4046     		mov	r0, r8
 168 005e FFF7FEFF 		bl	HAL_GPIO_Init
 169              	.LVL5:
 114:Src/quadspi.c **** 
 115:Src/quadspi.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 170              		.loc 1 115 0
 171 0062 CDF80490 		str	r9, [sp, #4]
ARM GAS  /tmp/ccINLlqj.s 			page 6


 116:Src/quadspi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 172              		.loc 1 116 0
 173 0066 0296     		str	r6, [sp, #8]
 117:Src/quadspi.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 117 0
 175 0068 0395     		str	r5, [sp, #12]
 118:Src/quadspi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 176              		.loc 1 118 0
 177 006a 0494     		str	r4, [sp, #16]
 119:Src/quadspi.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 178              		.loc 1 119 0
 179 006c 0597     		str	r7, [sp, #20]
 120:Src/quadspi.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 180              		.loc 1 120 0
 181 006e 0DEB0901 		add	r1, sp, r9
 182 0072 4046     		mov	r0, r8
 183 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 184              	.LVL6:
 121:Src/quadspi.c **** 
 122:Src/quadspi.c ****     GPIO_InitStruct.Pin = QSPI_D1_Pin|QSPI_D3_Pin|QSPI_D0_Pin;
 185              		.loc 1 122 0
 186 0078 4FF46053 		mov	r3, #14336
 187 007c 0193     		str	r3, [sp, #4]
 123:Src/quadspi.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 188              		.loc 1 123 0
 189 007e 0296     		str	r6, [sp, #8]
 124:Src/quadspi.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 124 0
 191 0080 0395     		str	r5, [sp, #12]
 125:Src/quadspi.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 192              		.loc 1 125 0
 193 0082 0494     		str	r4, [sp, #16]
 126:Src/quadspi.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 194              		.loc 1 126 0
 195 0084 0597     		str	r7, [sp, #20]
 127:Src/quadspi.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 196              		.loc 1 127 0
 197 0086 0DEB0901 		add	r1, sp, r9
 198 008a 0648     		ldr	r0, .L14+12
 199 008c FFF7FEFF 		bl	HAL_GPIO_Init
 200              	.LVL7:
 128:Src/quadspi.c **** 
 129:Src/quadspi.c ****   /* USER CODE BEGIN QUADSPI_MspInit 1 */
 130:Src/quadspi.c **** 
 131:Src/quadspi.c ****   /* USER CODE END QUADSPI_MspInit 1 */
 132:Src/quadspi.c ****   }
 133:Src/quadspi.c **** }
 201              		.loc 1 133 0
 202 0090 07B0     		add	sp, sp, #28
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 28
 205              		@ sp needed
 206 0092 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 207              	.L15:
 208 0096 00BF     		.align	2
 209              	.L14:
 210 0098 001000A0 		.word	-1610608640
ARM GAS  /tmp/ccINLlqj.s 			page 7


 211 009c 00380240 		.word	1073887232
 212 00a0 00100240 		.word	1073876992
 213 00a4 000C0240 		.word	1073875968
 214 00a8 00040240 		.word	1073873920
 215              		.cfi_endproc
 216              	.LFE139:
 218              		.section	.text.HAL_QSPI_MspDeInit,"ax",%progbits
 219              		.align	1
 220              		.global	HAL_QSPI_MspDeInit
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv5-sp-d16
 226              	HAL_QSPI_MspDeInit:
 227              	.LFB140:
 134:Src/quadspi.c **** 
 135:Src/quadspi.c **** void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* qspiHandle)
 136:Src/quadspi.c **** {
 228              		.loc 1 136 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL8:
 233 0000 08B5     		push	{r3, lr}
 234              	.LCFI4:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 137:Src/quadspi.c **** 
 138:Src/quadspi.c ****   if(qspiHandle->Instance==QUADSPI)
 238              		.loc 1 138 0
 239 0002 0268     		ldr	r2, [r0]
 240 0004 0B4B     		ldr	r3, .L20
 241 0006 9A42     		cmp	r2, r3
 242 0008 00D0     		beq	.L19
 243              	.LVL9:
 244              	.L16:
 139:Src/quadspi.c ****   {
 140:Src/quadspi.c ****   /* USER CODE BEGIN QUADSPI_MspDeInit 0 */
 141:Src/quadspi.c **** 
 142:Src/quadspi.c ****   /* USER CODE END QUADSPI_MspDeInit 0 */
 143:Src/quadspi.c ****     /* Peripheral clock disable */
 144:Src/quadspi.c ****     __HAL_RCC_QSPI_CLK_DISABLE();
 145:Src/quadspi.c ****   
 146:Src/quadspi.c ****     /**QUADSPI GPIO Configuration    
 147:Src/quadspi.c ****     PE2     ------> QUADSPI_BK1_IO2
 148:Src/quadspi.c ****     PB6     ------> QUADSPI_BK1_NCS
 149:Src/quadspi.c ****     PB2     ------> QUADSPI_CLK
 150:Src/quadspi.c ****     PD12     ------> QUADSPI_BK1_IO1
 151:Src/quadspi.c ****     PD13     ------> QUADSPI_BK1_IO3
 152:Src/quadspi.c ****     PD11     ------> QUADSPI_BK1_IO0 
 153:Src/quadspi.c ****     */
 154:Src/quadspi.c ****     HAL_GPIO_DeInit(QSPI_D2_GPIO_Port, QSPI_D2_Pin);
 155:Src/quadspi.c **** 
 156:Src/quadspi.c ****     HAL_GPIO_DeInit(GPIOB, QSPI_NCS_Pin|GPIO_PIN_2);
 157:Src/quadspi.c **** 
 158:Src/quadspi.c ****     HAL_GPIO_DeInit(GPIOD, QSPI_D1_Pin|QSPI_D3_Pin|QSPI_D0_Pin);
ARM GAS  /tmp/ccINLlqj.s 			page 8


 159:Src/quadspi.c **** 
 160:Src/quadspi.c ****   /* USER CODE BEGIN QUADSPI_MspDeInit 1 */
 161:Src/quadspi.c **** 
 162:Src/quadspi.c ****   /* USER CODE END QUADSPI_MspDeInit 1 */
 163:Src/quadspi.c ****   }
 164:Src/quadspi.c **** } 
 245              		.loc 1 164 0
 246 000a 08BD     		pop	{r3, pc}
 247              	.LVL10:
 248              	.L19:
 144:Src/quadspi.c ****   
 249              		.loc 1 144 0
 250 000c 0A4A     		ldr	r2, .L20+4
 251 000e 936B     		ldr	r3, [r2, #56]
 252 0010 23F00203 		bic	r3, r3, #2
 253 0014 9363     		str	r3, [r2, #56]
 154:Src/quadspi.c **** 
 254              		.loc 1 154 0
 255 0016 0421     		movs	r1, #4
 256 0018 0848     		ldr	r0, .L20+8
 257              	.LVL11:
 258 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 259              	.LVL12:
 156:Src/quadspi.c **** 
 260              		.loc 1 156 0
 261 001e 4421     		movs	r1, #68
 262 0020 0748     		ldr	r0, .L20+12
 263 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 264              	.LVL13:
 158:Src/quadspi.c **** 
 265              		.loc 1 158 0
 266 0026 4FF46051 		mov	r1, #14336
 267 002a 0648     		ldr	r0, .L20+16
 268 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 269              	.LVL14:
 270              		.loc 1 164 0
 271 0030 EBE7     		b	.L16
 272              	.L21:
 273 0032 00BF     		.align	2
 274              	.L20:
 275 0034 001000A0 		.word	-1610608640
 276 0038 00380240 		.word	1073887232
 277 003c 00100240 		.word	1073876992
 278 0040 00040240 		.word	1073873920
 279 0044 000C0240 		.word	1073875968
 280              		.cfi_endproc
 281              	.LFE140:
 283              		.comm	hqspi,76,4
 284              		.section	.rodata.MX_QUADSPI_Init.str1.4,"aMS",%progbits,1
 285              		.align	2
 286              	.LC0:
 287 0000 5372632F 		.ascii	"Src/quadspi.c\000"
 287      71756164 
 287      7370692E 
 287      6300
 288              		.text
 289              	.Letext0:
ARM GAS  /tmp/ccINLlqj.s 			page 9


 290              		.file 2 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_defa
 291              		.file 3 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h
 292              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 293              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 294              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 295              		.file 7 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 296              		.file 8 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 297              		.file 9 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include
 298              		.file 10 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 299              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 300              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 301              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 302              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 303              		.file 15 "Inc/quadspi.h"
ARM GAS  /tmp/ccINLlqj.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 quadspi.c
     /tmp/ccINLlqj.s:18     .text.MX_QUADSPI_Init:0000000000000000 $t
     /tmp/ccINLlqj.s:25     .text.MX_QUADSPI_Init:0000000000000000 MX_QUADSPI_Init
     /tmp/ccINLlqj.s:78     .text.MX_QUADSPI_Init:0000000000000030 $d
                            *COM*:000000000000004c hqspi
     /tmp/ccINLlqj.s:85     .text.HAL_QSPI_MspInit:0000000000000000 $t
     /tmp/ccINLlqj.s:92     .text.HAL_QSPI_MspInit:0000000000000000 HAL_QSPI_MspInit
     /tmp/ccINLlqj.s:210    .text.HAL_QSPI_MspInit:0000000000000098 $d
     /tmp/ccINLlqj.s:219    .text.HAL_QSPI_MspDeInit:0000000000000000 $t
     /tmp/ccINLlqj.s:226    .text.HAL_QSPI_MspDeInit:0000000000000000 HAL_QSPI_MspDeInit
     /tmp/ccINLlqj.s:275    .text.HAL_QSPI_MspDeInit:0000000000000034 $d
     /tmp/ccINLlqj.s:285    .rodata.MX_QUADSPI_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_QSPI_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
