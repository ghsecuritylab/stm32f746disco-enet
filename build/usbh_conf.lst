ARM GAS  /tmp/ccOKt3bg.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbh_conf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_HCD_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_HCD_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_HCD_MspInit:
  26              	.LFB143:
  27              		.file 1 "Src/usbh_conf.c"
   1:Src/usbh_conf.c **** /**
   2:Src/usbh_conf.c ****   ******************************************************************************
   3:Src/usbh_conf.c ****   * @file           : usbh_conf.c
   4:Src/usbh_conf.c ****   * @version        : v1.0_Cube
   5:Src/usbh_conf.c ****   * @brief          : This file implements the board support package for the USB host library
   6:Src/usbh_conf.c ****   ******************************************************************************
   7:Src/usbh_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbh_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbh_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbh_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbh_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbh_conf.c ****   *
  13:Src/usbh_conf.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/usbh_conf.c ****   * All rights reserved.
  15:Src/usbh_conf.c ****   *
  16:Src/usbh_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbh_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbh_conf.c ****   *
  19:Src/usbh_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbh_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbh_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbh_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbh_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbh_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbh_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbh_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbh_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbh_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbh_conf.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccOKt3bg.s 			page 2


  32:Src/usbh_conf.c ****   *    this license. 
  33:Src/usbh_conf.c ****   *
  34:Src/usbh_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbh_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbh_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbh_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbh_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbh_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbh_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbh_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbh_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbh_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbh_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbh_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbh_conf.c ****   *
  47:Src/usbh_conf.c ****   ******************************************************************************
  48:Src/usbh_conf.c ****   */
  49:Src/usbh_conf.c **** 
  50:Src/usbh_conf.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbh_conf.c **** #include "usbh_core.h"
  52:Src/usbh_conf.c **** #include "usbh_platform.h"
  53:Src/usbh_conf.c **** 
  54:Src/usbh_conf.c **** /* USER CODE BEGIN Includes */
  55:Src/usbh_conf.c **** 
  56:Src/usbh_conf.c **** /* USER CODE END Includes */
  57:Src/usbh_conf.c **** 
  58:Src/usbh_conf.c **** /* Private typedef -----------------------------------------------------------*/
  59:Src/usbh_conf.c **** /* Private define ------------------------------------------------------------*/
  60:Src/usbh_conf.c **** /* Private macro -------------------------------------------------------------*/
  61:Src/usbh_conf.c **** 
  62:Src/usbh_conf.c **** /* USER CODE BEGIN PV */
  63:Src/usbh_conf.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/usbh_conf.c **** 
  65:Src/usbh_conf.c **** /* USER CODE END PV */
  66:Src/usbh_conf.c **** 
  67:Src/usbh_conf.c ****                 HCD_HandleTypeDef hhcd_USB_OTG_FS;
  68:Src/usbh_conf.c **** void _Error_Handler(char * file, int line);
  69:Src/usbh_conf.c **** 
  70:Src/usbh_conf.c **** /* USER CODE BEGIN 0 */
  71:Src/usbh_conf.c **** 
  72:Src/usbh_conf.c **** /* USER CODE END 0 */
  73:Src/usbh_conf.c **** 
  74:Src/usbh_conf.c **** /* USER CODE BEGIN PFP */
  75:Src/usbh_conf.c **** /* Private function prototypes -----------------------------------------------*/
  76:Src/usbh_conf.c **** 
  77:Src/usbh_conf.c **** /* USER CODE END PFP */
  78:Src/usbh_conf.c **** 
  79:Src/usbh_conf.c **** /* Private functions ---------------------------------------------------------*/
  80:Src/usbh_conf.c **** 
  81:Src/usbh_conf.c **** /* USER CODE BEGIN 1 */
  82:Src/usbh_conf.c **** 
  83:Src/usbh_conf.c **** /* USER CODE END 1 */
  84:Src/usbh_conf.c **** 
  85:Src/usbh_conf.c **** /*******************************************************************************
  86:Src/usbh_conf.c ****                        LL Driver Callbacks (HCD -> USB Host Library)
  87:Src/usbh_conf.c **** *******************************************************************************/
  88:Src/usbh_conf.c **** /* MSP Init */
ARM GAS  /tmp/ccOKt3bg.s 			page 3


  89:Src/usbh_conf.c **** 
  90:Src/usbh_conf.c **** void HAL_HCD_MspInit(HCD_HandleTypeDef* hcdHandle)
  91:Src/usbh_conf.c **** {
  28              		.loc 1 91 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  92:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  93:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
  33              		.loc 1 93 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 B3F1A04F 		cmp	r3, #1342177280
  36 0006 00D0     		beq	.L7
  37 0008 7047     		bx	lr
  38              	.L7:
  91:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  39              		.loc 1 91 0
  40 000a 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45 000c 88B0     		sub	sp, sp, #32
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 40
  94:Src/usbh_conf.c ****   {
  95:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
  96:Src/usbh_conf.c **** 
  97:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
  98:Src/usbh_conf.c ****   
  99:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 100:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP
 101:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 102:Src/usbh_conf.c ****     PA10     ------> USB_OTG_FS_ID 
 103:Src/usbh_conf.c ****     */
 104:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = OTG_FS_P_Pin|OTG_FS_N_Pin|OTG_FS_ID_Pin;
  48              		.loc 1 104 0
  49 000e 4FF4E053 		mov	r3, #7168
  50 0012 0393     		str	r3, [sp, #12]
 105:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  51              		.loc 1 105 0
  52 0014 0223     		movs	r3, #2
  53 0016 0493     		str	r3, [sp, #16]
 106:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  54              		.loc 1 106 0
  55 0018 0024     		movs	r4, #0
  56 001a 0594     		str	r4, [sp, #20]
 107:Src/usbh_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  57              		.loc 1 107 0
  58 001c 0323     		movs	r3, #3
  59 001e 0693     		str	r3, [sp, #24]
 108:Src/usbh_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  60              		.loc 1 108 0
  61 0020 0A23     		movs	r3, #10
  62 0022 0793     		str	r3, [sp, #28]
 109:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  /tmp/ccOKt3bg.s 			page 4


  63              		.loc 1 109 0
  64 0024 03A9     		add	r1, sp, #12
  65 0026 1048     		ldr	r0, .L8
  66              	.LVL1:
  67 0028 FFF7FEFF 		bl	HAL_GPIO_Init
  68              	.LVL2:
  69              	.LBB2:
 110:Src/usbh_conf.c **** 
 111:Src/usbh_conf.c ****     /* Peripheral clock enable */
 112:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  70              		.loc 1 112 0
  71 002c 0F4B     		ldr	r3, .L8+4
  72 002e 5A6B     		ldr	r2, [r3, #52]
  73 0030 42F08002 		orr	r2, r2, #128
  74 0034 5A63     		str	r2, [r3, #52]
  75 0036 5A6B     		ldr	r2, [r3, #52]
  76 0038 02F08002 		and	r2, r2, #128
  77 003c 0192     		str	r2, [sp, #4]
  78 003e 019A     		ldr	r2, [sp, #4]
  79              	.LBB3:
  80 0040 5A6C     		ldr	r2, [r3, #68]
  81 0042 42F48042 		orr	r2, r2, #16384
  82 0046 5A64     		str	r2, [r3, #68]
  83 0048 5B6C     		ldr	r3, [r3, #68]
  84 004a 03F48043 		and	r3, r3, #16384
  85 004e 0293     		str	r3, [sp, #8]
  86 0050 029B     		ldr	r3, [sp, #8]
  87              	.LBE3:
  88              	.LBE2:
 113:Src/usbh_conf.c **** 
 114:Src/usbh_conf.c ****     /* Peripheral interrupt init */
 115:Src/usbh_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
  89              		.loc 1 115 0
  90 0052 2246     		mov	r2, r4
  91 0054 0521     		movs	r1, #5
  92 0056 4320     		movs	r0, #67
  93 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  94              	.LVL3:
 116:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  95              		.loc 1 116 0
  96 005c 4320     		movs	r0, #67
  97 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  98              	.LVL4:
 117:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
 118:Src/usbh_conf.c **** 
 119:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
 120:Src/usbh_conf.c ****   }
 121:Src/usbh_conf.c **** }
  99              		.loc 1 121 0
 100 0062 08B0     		add	sp, sp, #32
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 8
 103              		@ sp needed
 104 0064 10BD     		pop	{r4, pc}
 105              	.L9:
 106 0066 00BF     		.align	2
 107              	.L8:
ARM GAS  /tmp/ccOKt3bg.s 			page 5


 108 0068 00000240 		.word	1073872896
 109 006c 00380240 		.word	1073887232
 110              		.cfi_endproc
 111              	.LFE143:
 113              		.section	.text.HAL_HCD_MspDeInit,"ax",%progbits
 114              		.align	1
 115              		.global	HAL_HCD_MspDeInit
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv5-sp-d16
 121              	HAL_HCD_MspDeInit:
 122              	.LFB144:
 122:Src/usbh_conf.c **** 
 123:Src/usbh_conf.c **** void HAL_HCD_MspDeInit(HCD_HandleTypeDef* hcdHandle)
 124:Src/usbh_conf.c **** {
 123              		.loc 1 124 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              	.LVL5:
 128 0000 08B5     		push	{r3, lr}
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
 125:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
 133              		.loc 1 125 0
 134 0002 0368     		ldr	r3, [r0]
 135 0004 B3F1A04F 		cmp	r3, #1342177280
 136 0008 00D0     		beq	.L13
 137              	.LVL6:
 138              	.L10:
 126:Src/usbh_conf.c ****   {
 127:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
 128:Src/usbh_conf.c **** 
 129:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
 130:Src/usbh_conf.c ****     /* Peripheral clock disable */
 131:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
 132:Src/usbh_conf.c ****   
 133:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 134:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP
 135:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 136:Src/usbh_conf.c ****     PA10     ------> USB_OTG_FS_ID 
 137:Src/usbh_conf.c ****     */
 138:Src/usbh_conf.c ****     HAL_GPIO_DeInit(GPIOA, OTG_FS_P_Pin|OTG_FS_N_Pin|OTG_FS_ID_Pin);
 139:Src/usbh_conf.c **** 
 140:Src/usbh_conf.c ****     /* Peripheral interrupt Deinit*/
 141:Src/usbh_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 142:Src/usbh_conf.c **** 
 143:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 144:Src/usbh_conf.c **** 
 145:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 146:Src/usbh_conf.c ****   }
 147:Src/usbh_conf.c **** }
 139              		.loc 1 147 0
 140 000a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccOKt3bg.s 			page 6


 141              	.LVL7:
 142              	.L13:
 131:Src/usbh_conf.c ****   
 143              		.loc 1 131 0
 144 000c 064A     		ldr	r2, .L14
 145 000e 536B     		ldr	r3, [r2, #52]
 146 0010 23F08003 		bic	r3, r3, #128
 147 0014 5363     		str	r3, [r2, #52]
 138:Src/usbh_conf.c **** 
 148              		.loc 1 138 0
 149 0016 4FF4E051 		mov	r1, #7168
 150 001a 0448     		ldr	r0, .L14+4
 151              	.LVL8:
 152 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 153              	.LVL9:
 141:Src/usbh_conf.c **** 
 154              		.loc 1 141 0
 155 0020 4320     		movs	r0, #67
 156 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 157              	.LVL10:
 158              		.loc 1 147 0
 159 0026 F0E7     		b	.L10
 160              	.L15:
 161              		.align	2
 162              	.L14:
 163 0028 00380240 		.word	1073887232
 164 002c 00000240 		.word	1073872896
 165              		.cfi_endproc
 166              	.LFE144:
 168              		.section	.text.HAL_HCD_SOF_Callback,"ax",%progbits
 169              		.align	1
 170              		.global	HAL_HCD_SOF_Callback
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv5-sp-d16
 176              	HAL_HCD_SOF_Callback:
 177              	.LFB145:
 148:Src/usbh_conf.c **** 
 149:Src/usbh_conf.c **** /**
 150:Src/usbh_conf.c ****   * @brief  SOF callback.
 151:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 152:Src/usbh_conf.c ****   * @retval None
 153:Src/usbh_conf.c ****   */
 154:Src/usbh_conf.c **** void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
 155:Src/usbh_conf.c **** {
 178              		.loc 1 155 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL11:
 183 0000 08B5     		push	{r3, lr}
 184              	.LCFI4:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 156:Src/usbh_conf.c ****   USBH_LL_IncTimer(hhcd->pData);
ARM GAS  /tmp/ccOKt3bg.s 			page 7


 188              		.loc 1 156 0
 189 0002 D0F89402 		ldr	r0, [r0, #660]
 190              	.LVL12:
 191 0006 FFF7FEFF 		bl	USBH_LL_IncTimer
 192              	.LVL13:
 157:Src/usbh_conf.c **** }
 193              		.loc 1 157 0
 194 000a 08BD     		pop	{r3, pc}
 195              		.cfi_endproc
 196              	.LFE145:
 198              		.section	.text.HAL_HCD_Connect_Callback,"ax",%progbits
 199              		.align	1
 200              		.global	HAL_HCD_Connect_Callback
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-sp-d16
 206              	HAL_HCD_Connect_Callback:
 207              	.LFB146:
 158:Src/usbh_conf.c **** 
 159:Src/usbh_conf.c **** /**
 160:Src/usbh_conf.c ****   * @brief  SOF callback.
 161:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 162:Src/usbh_conf.c ****   * @retval None
 163:Src/usbh_conf.c ****   */
 164:Src/usbh_conf.c **** void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
 165:Src/usbh_conf.c **** {
 208              		.loc 1 165 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL14:
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI5:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 166:Src/usbh_conf.c ****   USBH_LL_Connect(hhcd->pData);
 218              		.loc 1 166 0
 219 0002 D0F89402 		ldr	r0, [r0, #660]
 220              	.LVL15:
 221 0006 FFF7FEFF 		bl	USBH_LL_Connect
 222              	.LVL16:
 167:Src/usbh_conf.c **** }
 223              		.loc 1 167 0
 224 000a 08BD     		pop	{r3, pc}
 225              		.cfi_endproc
 226              	.LFE146:
 228              		.section	.text.HAL_HCD_Disconnect_Callback,"ax",%progbits
 229              		.align	1
 230              		.global	HAL_HCD_Disconnect_Callback
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv5-sp-d16
 236              	HAL_HCD_Disconnect_Callback:
 237              	.LFB147:
ARM GAS  /tmp/ccOKt3bg.s 			page 8


 168:Src/usbh_conf.c **** 
 169:Src/usbh_conf.c **** /**
 170:Src/usbh_conf.c ****   * @brief  SOF callback.
 171:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 172:Src/usbh_conf.c ****   * @retval None
 173:Src/usbh_conf.c ****   */
 174:Src/usbh_conf.c **** void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
 175:Src/usbh_conf.c **** {
 238              		.loc 1 175 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              	.LVL17:
 243 0000 08B5     		push	{r3, lr}
 244              	.LCFI6:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
 176:Src/usbh_conf.c ****   USBH_LL_Disconnect(hhcd->pData);
 248              		.loc 1 176 0
 249 0002 D0F89402 		ldr	r0, [r0, #660]
 250              	.LVL18:
 251 0006 FFF7FEFF 		bl	USBH_LL_Disconnect
 252              	.LVL19:
 177:Src/usbh_conf.c **** }
 253              		.loc 1 177 0
 254 000a 08BD     		pop	{r3, pc}
 255              		.cfi_endproc
 256              	.LFE147:
 258              		.section	.text.HAL_HCD_HC_NotifyURBChange_Callback,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_HCD_HC_NotifyURBChange_Callback
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv5-sp-d16
 266              	HAL_HCD_HC_NotifyURBChange_Callback:
 267              	.LFB148:
 178:Src/usbh_conf.c **** 
 179:Src/usbh_conf.c **** /**
 180:Src/usbh_conf.c ****   * @brief  Notify URB state change callback.
 181:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 182:Src/usbh_conf.c ****   * @param  chnum: channel number
 183:Src/usbh_conf.c ****   * @param  urb_state: state
 184:Src/usbh_conf.c ****   * @retval None
 185:Src/usbh_conf.c ****   */
 186:Src/usbh_conf.c **** void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDe
 187:Src/usbh_conf.c **** {
 268              		.loc 1 187 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL20:
 273 0000 08B5     		push	{r3, lr}
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
ARM GAS  /tmp/ccOKt3bg.s 			page 9


 277              		.cfi_offset 14, -4
 188:Src/usbh_conf.c ****   /* To be used with OS to sync URB state with the global state machine */
 189:Src/usbh_conf.c **** #if (USBH_USE_OS == 1)
 190:Src/usbh_conf.c ****   USBH_LL_NotifyURBChange(hhcd->pData);
 278              		.loc 1 190 0
 279 0002 D0F89402 		ldr	r0, [r0, #660]
 280              	.LVL21:
 281 0006 FFF7FEFF 		bl	USBH_LL_NotifyURBChange
 282              	.LVL22:
 191:Src/usbh_conf.c **** #endif
 192:Src/usbh_conf.c **** }
 283              		.loc 1 192 0
 284 000a 08BD     		pop	{r3, pc}
 285              		.cfi_endproc
 286              	.LFE148:
 288              		.section	.text.USBH_LL_Init,"ax",%progbits
 289              		.align	1
 290              		.global	USBH_LL_Init
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-sp-d16
 296              	USBH_LL_Init:
 297              	.LFB149:
 193:Src/usbh_conf.c **** 
 194:Src/usbh_conf.c **** /*******************************************************************************
 195:Src/usbh_conf.c ****                        LL Driver Interface (USB Host Library --> HCD)
 196:Src/usbh_conf.c **** *******************************************************************************/
 197:Src/usbh_conf.c **** 
 198:Src/usbh_conf.c **** /**
 199:Src/usbh_conf.c ****   * @brief  Initialize the low level portion of the host driver.
 200:Src/usbh_conf.c ****   * @param  phost: Host handle
 201:Src/usbh_conf.c ****   * @retval USBH status
 202:Src/usbh_conf.c ****   */
 203:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Init(USBH_HandleTypeDef *phost)
 204:Src/usbh_conf.c **** {
 298              		.loc 1 204 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              	.LVL23:
 205:Src/usbh_conf.c ****   /* Init USB_IP */
 206:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 303              		.loc 1 206 0
 304 0000 90F8BC33 		ldrb	r3, [r0, #956]	@ zero_extendqisi2
 305 0004 012B     		cmp	r3, #1
 306 0006 01D0     		beq	.L31
 207:Src/usbh_conf.c ****   /* Link the driver to the stack. */
 208:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.pData = phost;
 209:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 210:Src/usbh_conf.c **** 
 211:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 212:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 213:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 214:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 215:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 216:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
ARM GAS  /tmp/ccOKt3bg.s 			page 10


 217:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 218:Src/usbh_conf.c ****   {
 219:Src/usbh_conf.c ****     _Error_Handler(__FILE__, __LINE__);
 220:Src/usbh_conf.c ****   }
 221:Src/usbh_conf.c **** 
 222:Src/usbh_conf.c ****   USBH_LL_SetTimer(phost, HAL_HCD_GetCurrentFrame(&hhcd_USB_OTG_FS));
 223:Src/usbh_conf.c ****   }
 224:Src/usbh_conf.c ****   return USBH_OK;
 225:Src/usbh_conf.c **** }
 307              		.loc 1 225 0
 308 0008 0020     		movs	r0, #0
 309              	.LVL24:
 310 000a 7047     		bx	lr
 311              	.LVL25:
 312              	.L31:
 204:Src/usbh_conf.c ****   /* Init USB_IP */
 313              		.loc 1 204 0
 314 000c 10B5     		push	{r4, lr}
 315              	.LCFI8:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
 319 000e 0446     		mov	r4, r0
 208:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 320              		.loc 1 208 0
 321 0010 1048     		ldr	r0, .L33
 322              	.LVL26:
 323 0012 C0F89442 		str	r4, [r0, #660]
 209:Src/usbh_conf.c **** 
 324              		.loc 1 209 0
 325 0016 C4F8C003 		str	r0, [r4, #960]
 211:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 326              		.loc 1 211 0
 327 001a 4FF0A043 		mov	r3, #1342177280
 328 001e 0360     		str	r3, [r0]
 212:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 329              		.loc 1 212 0
 330 0020 0823     		movs	r3, #8
 331 0022 8360     		str	r3, [r0, #8]
 213:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 332              		.loc 1 213 0
 333 0024 0323     		movs	r3, #3
 334 0026 C360     		str	r3, [r0, #12]
 214:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 335              		.loc 1 214 0
 336 0028 0023     		movs	r3, #0
 337 002a 0361     		str	r3, [r0, #16]
 215:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 338              		.loc 1 215 0
 339 002c 0222     		movs	r2, #2
 340 002e 8261     		str	r2, [r0, #24]
 216:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 341              		.loc 1 216 0
 342 0030 C361     		str	r3, [r0, #28]
 217:Src/usbh_conf.c ****   {
 343              		.loc 1 217 0
 344 0032 FFF7FEFF 		bl	HAL_HCD_Init
ARM GAS  /tmp/ccOKt3bg.s 			page 11


 345              	.LVL27:
 346 0036 40B9     		cbnz	r0, .L32
 347              	.L26:
 222:Src/usbh_conf.c ****   }
 348              		.loc 1 222 0
 349 0038 0648     		ldr	r0, .L33
 350 003a FFF7FEFF 		bl	HAL_HCD_GetCurrentFrame
 351              	.LVL28:
 352 003e 0146     		mov	r1, r0
 353 0040 2046     		mov	r0, r4
 354 0042 FFF7FEFF 		bl	USBH_LL_SetTimer
 355              	.LVL29:
 356              		.loc 1 225 0
 357 0046 0020     		movs	r0, #0
 358 0048 10BD     		pop	{r4, pc}
 359              	.LVL30:
 360              	.L32:
 219:Src/usbh_conf.c ****   }
 361              		.loc 1 219 0
 362 004a DB21     		movs	r1, #219
 363 004c 0248     		ldr	r0, .L33+4
 364 004e FFF7FEFF 		bl	_Error_Handler
 365              	.LVL31:
 366 0052 F1E7     		b	.L26
 367              	.L34:
 368              		.align	2
 369              	.L33:
 370 0054 00000000 		.word	hhcd_USB_OTG_FS
 371 0058 00000000 		.word	.LC0
 372              		.cfi_endproc
 373              	.LFE149:
 375              		.section	.text.USBH_LL_DeInit,"ax",%progbits
 376              		.align	1
 377              		.global	USBH_LL_DeInit
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv5-sp-d16
 383              	USBH_LL_DeInit:
 384              	.LFB150:
 226:Src/usbh_conf.c **** 
 227:Src/usbh_conf.c **** /**
 228:Src/usbh_conf.c ****   * @brief  De-Initialize the low level portion of the host driver.
 229:Src/usbh_conf.c ****   * @param  phost: Host handle
 230:Src/usbh_conf.c ****   * @retval USBH status
 231:Src/usbh_conf.c ****   */
 232:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DeInit(USBH_HandleTypeDef *phost)
 233:Src/usbh_conf.c **** {
 385              		.loc 1 233 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              	.LVL32:
 390 0000 08B5     		push	{r3, lr}
 391              	.LCFI9:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 3, -8
ARM GAS  /tmp/ccOKt3bg.s 			page 12


 394              		.cfi_offset 14, -4
 395              	.LVL33:
 234:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 235:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 236:Src/usbh_conf.c **** 
 237:Src/usbh_conf.c ****   hal_status = HAL_HCD_DeInit(phost->pData);
 396              		.loc 1 237 0
 397 0002 D0F8C003 		ldr	r0, [r0, #960]
 398              	.LVL34:
 399 0006 FFF7FEFF 		bl	HAL_HCD_DeInit
 400              	.LVL35:
 238:Src/usbh_conf.c **** 
 239:Src/usbh_conf.c ****   switch (hal_status) {
 401              		.loc 1 239 0
 402 000a 18B1     		cbz	r0, .L37
 403 000c 0228     		cmp	r0, #2
 404 000e 03D0     		beq	.L38
 240:Src/usbh_conf.c ****     case HAL_OK :
 241:Src/usbh_conf.c ****       usb_status = USBH_OK;
 242:Src/usbh_conf.c ****     break;
 243:Src/usbh_conf.c ****     case HAL_ERROR :
 244:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 405              		.loc 1 244 0
 406 0010 0220     		movs	r0, #2
 407              	.LVL36:
 408              	.L36:
 245:Src/usbh_conf.c ****     break;
 246:Src/usbh_conf.c ****     case HAL_BUSY :
 247:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 248:Src/usbh_conf.c ****     break;
 249:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 250:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 251:Src/usbh_conf.c ****     break;
 252:Src/usbh_conf.c ****     default :
 253:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 254:Src/usbh_conf.c ****     break;
 255:Src/usbh_conf.c ****   }
 256:Src/usbh_conf.c ****   return usb_status;
 257:Src/usbh_conf.c **** }
 409              		.loc 1 257 0
 410 0012 08BD     		pop	{r3, pc}
 411              	.LVL37:
 412              	.L37:
 241:Src/usbh_conf.c ****     break;
 413              		.loc 1 241 0
 414 0014 0020     		movs	r0, #0
 415              	.LVL38:
 416 0016 FCE7     		b	.L36
 417              	.LVL39:
 418              	.L38:
 247:Src/usbh_conf.c ****     break;
 419              		.loc 1 247 0
 420 0018 0120     		movs	r0, #1
 421              	.LVL40:
 248:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 422              		.loc 1 248 0
 423 001a FAE7     		b	.L36
ARM GAS  /tmp/ccOKt3bg.s 			page 13


 424              		.cfi_endproc
 425              	.LFE150:
 427              		.section	.text.USBH_LL_Start,"ax",%progbits
 428              		.align	1
 429              		.global	USBH_LL_Start
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-sp-d16
 435              	USBH_LL_Start:
 436              	.LFB151:
 258:Src/usbh_conf.c **** 
 259:Src/usbh_conf.c **** /**
 260:Src/usbh_conf.c ****   * @brief  Start the low level portion of the host driver.
 261:Src/usbh_conf.c ****   * @param  phost: Host handle
 262:Src/usbh_conf.c ****   * @retval USBH status
 263:Src/usbh_conf.c ****   */
 264:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Start(USBH_HandleTypeDef *phost)
 265:Src/usbh_conf.c **** {
 437              		.loc 1 265 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              	.LVL41:
 442 0000 08B5     		push	{r3, lr}
 443              	.LCFI10:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 3, -8
 446              		.cfi_offset 14, -4
 447              	.LVL42:
 266:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 267:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 268:Src/usbh_conf.c **** 
 269:Src/usbh_conf.c ****   hal_status = HAL_HCD_Start(phost->pData);
 448              		.loc 1 269 0
 449 0002 D0F8C003 		ldr	r0, [r0, #960]
 450              	.LVL43:
 451 0006 FFF7FEFF 		bl	HAL_HCD_Start
 452              	.LVL44:
 270:Src/usbh_conf.c **** 
 271:Src/usbh_conf.c ****   switch (hal_status) {
 453              		.loc 1 271 0
 454 000a 18B1     		cbz	r0, .L44
 455 000c 0228     		cmp	r0, #2
 456 000e 03D0     		beq	.L45
 272:Src/usbh_conf.c ****     case HAL_OK :
 273:Src/usbh_conf.c ****       usb_status = USBH_OK;
 274:Src/usbh_conf.c ****     break;
 275:Src/usbh_conf.c ****     case HAL_ERROR :
 276:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 457              		.loc 1 276 0
 458 0010 0220     		movs	r0, #2
 459              	.LVL45:
 460              	.L43:
 277:Src/usbh_conf.c ****     break;
 278:Src/usbh_conf.c ****     case HAL_BUSY :
 279:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
ARM GAS  /tmp/ccOKt3bg.s 			page 14


 280:Src/usbh_conf.c ****     break;
 281:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 282:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 283:Src/usbh_conf.c ****     break;
 284:Src/usbh_conf.c ****     default :
 285:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 286:Src/usbh_conf.c ****     break;
 287:Src/usbh_conf.c ****   }
 288:Src/usbh_conf.c ****   return usb_status;
 289:Src/usbh_conf.c **** }
 461              		.loc 1 289 0
 462 0012 08BD     		pop	{r3, pc}
 463              	.LVL46:
 464              	.L44:
 273:Src/usbh_conf.c ****     break;
 465              		.loc 1 273 0
 466 0014 0020     		movs	r0, #0
 467              	.LVL47:
 468 0016 FCE7     		b	.L43
 469              	.LVL48:
 470              	.L45:
 279:Src/usbh_conf.c ****     break;
 471              		.loc 1 279 0
 472 0018 0120     		movs	r0, #1
 473              	.LVL49:
 280:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 474              		.loc 1 280 0
 475 001a FAE7     		b	.L43
 476              		.cfi_endproc
 477              	.LFE151:
 479              		.section	.text.USBH_LL_Stop,"ax",%progbits
 480              		.align	1
 481              		.global	USBH_LL_Stop
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv5-sp-d16
 487              	USBH_LL_Stop:
 488              	.LFB152:
 290:Src/usbh_conf.c **** 
 291:Src/usbh_conf.c **** /**
 292:Src/usbh_conf.c ****   * @brief  Stop the low level portion of the host driver.
 293:Src/usbh_conf.c ****   * @param  phost: Host handle
 294:Src/usbh_conf.c ****   * @retval USBH status
 295:Src/usbh_conf.c ****   */
 296:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Stop(USBH_HandleTypeDef *phost)
 297:Src/usbh_conf.c **** {
 489              		.loc 1 297 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              	.LVL50:
 494 0000 08B5     		push	{r3, lr}
 495              	.LCFI11:
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 3, -8
 498              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOKt3bg.s 			page 15


 499              	.LVL51:
 298:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 299:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 300:Src/usbh_conf.c **** 
 301:Src/usbh_conf.c ****   hal_status = HAL_HCD_Stop(phost->pData);
 500              		.loc 1 301 0
 501 0002 D0F8C003 		ldr	r0, [r0, #960]
 502              	.LVL52:
 503 0006 FFF7FEFF 		bl	HAL_HCD_Stop
 504              	.LVL53:
 302:Src/usbh_conf.c **** 
 303:Src/usbh_conf.c ****   switch (hal_status) {
 505              		.loc 1 303 0
 506 000a 18B1     		cbz	r0, .L51
 507 000c 0228     		cmp	r0, #2
 508 000e 03D0     		beq	.L52
 304:Src/usbh_conf.c ****     case HAL_OK :
 305:Src/usbh_conf.c ****       usb_status = USBH_OK;
 306:Src/usbh_conf.c ****     break;
 307:Src/usbh_conf.c ****     case HAL_ERROR :
 308:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 509              		.loc 1 308 0
 510 0010 0220     		movs	r0, #2
 511              	.LVL54:
 512              	.L50:
 309:Src/usbh_conf.c ****     break;
 310:Src/usbh_conf.c ****     case HAL_BUSY :
 311:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 312:Src/usbh_conf.c ****     break;
 313:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 314:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 315:Src/usbh_conf.c ****     break;
 316:Src/usbh_conf.c ****     default :
 317:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 318:Src/usbh_conf.c ****     break;
 319:Src/usbh_conf.c ****   }
 320:Src/usbh_conf.c ****   return usb_status;
 321:Src/usbh_conf.c **** }
 513              		.loc 1 321 0
 514 0012 08BD     		pop	{r3, pc}
 515              	.LVL55:
 516              	.L51:
 305:Src/usbh_conf.c ****     break;
 517              		.loc 1 305 0
 518 0014 0020     		movs	r0, #0
 519              	.LVL56:
 520 0016 FCE7     		b	.L50
 521              	.LVL57:
 522              	.L52:
 311:Src/usbh_conf.c ****     break;
 523              		.loc 1 311 0
 524 0018 0120     		movs	r0, #1
 525              	.LVL58:
 312:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 526              		.loc 1 312 0
 527 001a FAE7     		b	.L50
 528              		.cfi_endproc
ARM GAS  /tmp/ccOKt3bg.s 			page 16


 529              	.LFE152:
 531              		.section	.text.USBH_LL_GetSpeed,"ax",%progbits
 532              		.align	1
 533              		.global	USBH_LL_GetSpeed
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu fpv5-sp-d16
 539              	USBH_LL_GetSpeed:
 540              	.LFB153:
 322:Src/usbh_conf.c **** 
 323:Src/usbh_conf.c **** /**
 324:Src/usbh_conf.c ****   * @brief  Return the USB host speed from the low level driver.
 325:Src/usbh_conf.c ****   * @param  phost: Host handle
 326:Src/usbh_conf.c ****   * @retval USBH speeds
 327:Src/usbh_conf.c ****   */
 328:Src/usbh_conf.c **** USBH_SpeedTypeDef USBH_LL_GetSpeed(USBH_HandleTypeDef *phost)
 329:Src/usbh_conf.c **** {
 541              		.loc 1 329 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL59:
 546 0000 08B5     		push	{r3, lr}
 547              	.LCFI12:
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 3, -8
 550              		.cfi_offset 14, -4
 551              	.LVL60:
 330:Src/usbh_conf.c ****   USBH_SpeedTypeDef speed = USBH_SPEED_FULL;
 331:Src/usbh_conf.c **** 
 332:Src/usbh_conf.c ****   switch (HAL_HCD_GetCurrentSpeed(phost->pData))
 552              		.loc 1 332 0
 553 0002 D0F8C003 		ldr	r0, [r0, #960]
 554              	.LVL61:
 555 0006 FFF7FEFF 		bl	HAL_HCD_GetCurrentSpeed
 556              	.LVL62:
 557 000a 18B1     		cbz	r0, .L58
 558 000c 0228     		cmp	r0, #2
 559 000e 03D0     		beq	.L59
 333:Src/usbh_conf.c ****   {
 334:Src/usbh_conf.c ****   case 0 :
 335:Src/usbh_conf.c ****     speed = USBH_SPEED_HIGH;
 336:Src/usbh_conf.c ****     break;
 337:Src/usbh_conf.c **** 
 338:Src/usbh_conf.c ****   case 1 :
 339:Src/usbh_conf.c ****     speed = USBH_SPEED_FULL;
 560              		.loc 1 339 0
 561 0010 0120     		movs	r0, #1
 562              	.LVL63:
 563              	.L57:
 340:Src/usbh_conf.c ****     break;
 341:Src/usbh_conf.c **** 
 342:Src/usbh_conf.c ****   case 2 :
 343:Src/usbh_conf.c ****     speed = USBH_SPEED_LOW;
 344:Src/usbh_conf.c ****     break;
 345:Src/usbh_conf.c **** 
ARM GAS  /tmp/ccOKt3bg.s 			page 17


 346:Src/usbh_conf.c ****   default:
 347:Src/usbh_conf.c ****    speed = USBH_SPEED_FULL;
 348:Src/usbh_conf.c ****     break;
 349:Src/usbh_conf.c ****   }
 350:Src/usbh_conf.c ****   return  speed;
 351:Src/usbh_conf.c **** }
 564              		.loc 1 351 0
 565 0012 08BD     		pop	{r3, pc}
 566              	.LVL64:
 567              	.L58:
 335:Src/usbh_conf.c ****     break;
 568              		.loc 1 335 0
 569 0014 0020     		movs	r0, #0
 570 0016 FCE7     		b	.L57
 571              	.L59:
 572              	.LVL65:
 343:Src/usbh_conf.c ****     break;
 573              		.loc 1 343 0
 574 0018 0220     		movs	r0, #2
 344:Src/usbh_conf.c **** 
 575              		.loc 1 344 0
 576 001a FAE7     		b	.L57
 577              		.cfi_endproc
 578              	.LFE153:
 580              		.section	.text.USBH_LL_ResetPort,"ax",%progbits
 581              		.align	1
 582              		.global	USBH_LL_ResetPort
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu fpv5-sp-d16
 588              	USBH_LL_ResetPort:
 589              	.LFB154:
 352:Src/usbh_conf.c **** 
 353:Src/usbh_conf.c **** /**
 354:Src/usbh_conf.c ****   * @brief  Reset the Host port of the low level driver.
 355:Src/usbh_conf.c ****   * @param  phost: Host handle
 356:Src/usbh_conf.c ****   * @retval USBH status
 357:Src/usbh_conf.c ****   */
 358:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ResetPort(USBH_HandleTypeDef *phost)
 359:Src/usbh_conf.c **** {
 590              		.loc 1 359 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              	.LVL66:
 595 0000 08B5     		push	{r3, lr}
 596              	.LCFI13:
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 3, -8
 599              		.cfi_offset 14, -4
 600              	.LVL67:
 360:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 361:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 362:Src/usbh_conf.c **** 
 363:Src/usbh_conf.c ****   hal_status = HAL_HCD_ResetPort(phost->pData);
 601              		.loc 1 363 0
ARM GAS  /tmp/ccOKt3bg.s 			page 18


 602 0002 D0F8C003 		ldr	r0, [r0, #960]
 603              	.LVL68:
 604 0006 FFF7FEFF 		bl	HAL_HCD_ResetPort
 605              	.LVL69:
 364:Src/usbh_conf.c ****   switch (hal_status) {
 606              		.loc 1 364 0
 607 000a 18B1     		cbz	r0, .L65
 608 000c 0228     		cmp	r0, #2
 609 000e 03D0     		beq	.L66
 365:Src/usbh_conf.c ****     case HAL_OK :
 366:Src/usbh_conf.c ****       usb_status = USBH_OK;
 367:Src/usbh_conf.c ****     break;
 368:Src/usbh_conf.c ****     case HAL_ERROR :
 369:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 610              		.loc 1 369 0
 611 0010 0220     		movs	r0, #2
 612              	.LVL70:
 613              	.L64:
 370:Src/usbh_conf.c ****     break;
 371:Src/usbh_conf.c ****     case HAL_BUSY :
 372:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 373:Src/usbh_conf.c ****     break;
 374:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 375:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 376:Src/usbh_conf.c ****     break;
 377:Src/usbh_conf.c ****     default :
 378:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 379:Src/usbh_conf.c ****     break;
 380:Src/usbh_conf.c ****   }
 381:Src/usbh_conf.c ****   return usb_status;
 382:Src/usbh_conf.c **** }
 614              		.loc 1 382 0
 615 0012 08BD     		pop	{r3, pc}
 616              	.LVL71:
 617              	.L65:
 366:Src/usbh_conf.c ****     break;
 618              		.loc 1 366 0
 619 0014 0020     		movs	r0, #0
 620              	.LVL72:
 621 0016 FCE7     		b	.L64
 622              	.LVL73:
 623              	.L66:
 372:Src/usbh_conf.c ****     break;
 624              		.loc 1 372 0
 625 0018 0120     		movs	r0, #1
 626              	.LVL74:
 373:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 627              		.loc 1 373 0
 628 001a FAE7     		b	.L64
 629              		.cfi_endproc
 630              	.LFE154:
 632              		.section	.text.USBH_LL_GetLastXferSize,"ax",%progbits
 633              		.align	1
 634              		.global	USBH_LL_GetLastXferSize
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
ARM GAS  /tmp/ccOKt3bg.s 			page 19


 638              		.fpu fpv5-sp-d16
 640              	USBH_LL_GetLastXferSize:
 641              	.LFB155:
 383:Src/usbh_conf.c **** 
 384:Src/usbh_conf.c **** /**
 385:Src/usbh_conf.c ****   * @brief  Return the last transfered packet size.
 386:Src/usbh_conf.c ****   * @param  phost: Host handle
 387:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 388:Src/usbh_conf.c ****   * @retval Packet size
 389:Src/usbh_conf.c ****   */
 390:Src/usbh_conf.c **** uint32_t USBH_LL_GetLastXferSize(USBH_HandleTypeDef *phost, uint8_t pipe)
 391:Src/usbh_conf.c **** {
 642              		.loc 1 391 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL75:
 647 0000 08B5     		push	{r3, lr}
 648              	.LCFI14:
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 3, -8
 651              		.cfi_offset 14, -4
 392:Src/usbh_conf.c ****   return HAL_HCD_HC_GetXferCount(phost->pData, pipe);
 652              		.loc 1 392 0
 653 0002 D0F8C003 		ldr	r0, [r0, #960]
 654              	.LVL76:
 655 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetXferCount
 656              	.LVL77:
 393:Src/usbh_conf.c **** }
 657              		.loc 1 393 0
 658 000a 08BD     		pop	{r3, pc}
 659              		.cfi_endproc
 660              	.LFE155:
 662              		.section	.text.USBH_LL_OpenPipe,"ax",%progbits
 663              		.align	1
 664              		.global	USBH_LL_OpenPipe
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv5-sp-d16
 670              	USBH_LL_OpenPipe:
 671              	.LFB156:
 394:Src/usbh_conf.c **** 
 395:Src/usbh_conf.c **** /**
 396:Src/usbh_conf.c ****   * @brief  Open a pipe of the low level driver.
 397:Src/usbh_conf.c ****   * @param  phost: Host handle
 398:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index
 399:Src/usbh_conf.c ****   * @param  epnum: Endpoint number
 400:Src/usbh_conf.c ****   * @param  dev_address: Device USB address
 401:Src/usbh_conf.c ****   * @param  speed: Device Speed
 402:Src/usbh_conf.c ****   * @param  ep_type: Endpoint type
 403:Src/usbh_conf.c ****   * @param  mps: Endpoint max packet size
 404:Src/usbh_conf.c ****   * @retval USBH status
 405:Src/usbh_conf.c ****   */
 406:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_OpenPipe(USBH_HandleTypeDef *phost, uint8_t pipe_num, uint8_t epnum,
 407:Src/usbh_conf.c ****                                     uint8_t dev_address, uint8_t speed, uint8_t ep_type, uint16_t m
 408:Src/usbh_conf.c **** {
ARM GAS  /tmp/ccOKt3bg.s 			page 20


 672              		.loc 1 408 0
 673              		.cfi_startproc
 674              		@ args = 12, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              	.LVL78:
 677 0000 10B5     		push	{r4, lr}
 678              	.LCFI15:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 4, -8
 681              		.cfi_offset 14, -4
 682 0002 84B0     		sub	sp, sp, #16
 683              	.LCFI16:
 684              		.cfi_def_cfa_offset 24
 685              	.LVL79:
 409:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 410:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 411:Src/usbh_conf.c **** 
 412:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Init(phost->pData, pipe_num, epnum,
 686              		.loc 1 412 0
 687 0004 D0F8C003 		ldr	r0, [r0, #960]
 688              	.LVL80:
 689 0008 BDF82040 		ldrh	r4, [sp, #32]
 690 000c 0294     		str	r4, [sp, #8]
 691 000e 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 692 0012 0194     		str	r4, [sp, #4]
 693 0014 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 694 0018 0094     		str	r4, [sp]
 695 001a FFF7FEFF 		bl	HAL_HCD_HC_Init
 696              	.LVL81:
 413:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 414:Src/usbh_conf.c **** 
 415:Src/usbh_conf.c ****   switch (hal_status) {
 697              		.loc 1 415 0
 698 001e 20B1     		cbz	r0, .L74
 699 0020 0228     		cmp	r0, #2
 700 0022 04D0     		beq	.L75
 416:Src/usbh_conf.c ****     case HAL_OK :
 417:Src/usbh_conf.c ****       usb_status = USBH_OK;
 418:Src/usbh_conf.c ****     break;
 419:Src/usbh_conf.c ****     case HAL_ERROR :
 420:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 701              		.loc 1 420 0
 702 0024 0220     		movs	r0, #2
 703              	.LVL82:
 704              	.L73:
 421:Src/usbh_conf.c ****     break;
 422:Src/usbh_conf.c ****     case HAL_BUSY :
 423:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 424:Src/usbh_conf.c ****     break;
 425:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 426:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 427:Src/usbh_conf.c ****     break;
 428:Src/usbh_conf.c ****     default :
 429:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 430:Src/usbh_conf.c ****     break;
 431:Src/usbh_conf.c ****   }
 432:Src/usbh_conf.c ****   return usb_status;
ARM GAS  /tmp/ccOKt3bg.s 			page 21


 433:Src/usbh_conf.c **** }
 705              		.loc 1 433 0
 706 0026 04B0     		add	sp, sp, #16
 707              	.LCFI17:
 708              		.cfi_remember_state
 709              		.cfi_def_cfa_offset 8
 710              		@ sp needed
 711 0028 10BD     		pop	{r4, pc}
 712              	.LVL83:
 713              	.L74:
 714              	.LCFI18:
 715              		.cfi_restore_state
 417:Src/usbh_conf.c ****     break;
 716              		.loc 1 417 0
 717 002a 0020     		movs	r0, #0
 718              	.LVL84:
 719 002c FBE7     		b	.L73
 720              	.LVL85:
 721              	.L75:
 423:Src/usbh_conf.c ****     break;
 722              		.loc 1 423 0
 723 002e 0120     		movs	r0, #1
 724              	.LVL86:
 424:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 725              		.loc 1 424 0
 726 0030 F9E7     		b	.L73
 727              		.cfi_endproc
 728              	.LFE156:
 730              		.section	.text.USBH_LL_ClosePipe,"ax",%progbits
 731              		.align	1
 732              		.global	USBH_LL_ClosePipe
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv5-sp-d16
 738              	USBH_LL_ClosePipe:
 739              	.LFB157:
 434:Src/usbh_conf.c **** 
 435:Src/usbh_conf.c **** /**
 436:Src/usbh_conf.c ****   * @brief  Close a pipe of the low level driver.
 437:Src/usbh_conf.c ****   * @param  phost: Host handle
 438:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 439:Src/usbh_conf.c ****   * @retval USBH status
 440:Src/usbh_conf.c ****   */
 441:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ClosePipe(USBH_HandleTypeDef *phost, uint8_t pipe)
 442:Src/usbh_conf.c **** {
 740              		.loc 1 442 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              	.LVL87:
 745 0000 08B5     		push	{r3, lr}
 746              	.LCFI19:
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 3, -8
 749              		.cfi_offset 14, -4
 750              	.LVL88:
ARM GAS  /tmp/ccOKt3bg.s 			page 22


 443:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 444:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 445:Src/usbh_conf.c **** 
 446:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Halt(phost->pData, pipe);
 751              		.loc 1 446 0
 752 0002 D0F8C003 		ldr	r0, [r0, #960]
 753              	.LVL89:
 754 0006 FFF7FEFF 		bl	HAL_HCD_HC_Halt
 755              	.LVL90:
 447:Src/usbh_conf.c **** 
 448:Src/usbh_conf.c ****   switch (hal_status) {
 756              		.loc 1 448 0
 757 000a 18B1     		cbz	r0, .L81
 758 000c 0228     		cmp	r0, #2
 759 000e 03D0     		beq	.L82
 449:Src/usbh_conf.c ****     case HAL_OK :
 450:Src/usbh_conf.c ****       usb_status = USBH_OK;
 451:Src/usbh_conf.c ****     break;
 452:Src/usbh_conf.c ****     case HAL_ERROR :
 453:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 760              		.loc 1 453 0
 761 0010 0220     		movs	r0, #2
 762              	.LVL91:
 763              	.L80:
 454:Src/usbh_conf.c ****     break;
 455:Src/usbh_conf.c ****     case HAL_BUSY :
 456:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 457:Src/usbh_conf.c ****     break;
 458:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 459:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 460:Src/usbh_conf.c ****     break;
 461:Src/usbh_conf.c ****     default :
 462:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 463:Src/usbh_conf.c ****     break;
 464:Src/usbh_conf.c ****   }
 465:Src/usbh_conf.c ****   return usb_status;
 466:Src/usbh_conf.c **** }
 764              		.loc 1 466 0
 765 0012 08BD     		pop	{r3, pc}
 766              	.LVL92:
 767              	.L81:
 450:Src/usbh_conf.c ****     break;
 768              		.loc 1 450 0
 769 0014 0020     		movs	r0, #0
 770              	.LVL93:
 771 0016 FCE7     		b	.L80
 772              	.LVL94:
 773              	.L82:
 456:Src/usbh_conf.c ****     break;
 774              		.loc 1 456 0
 775 0018 0120     		movs	r0, #1
 776              	.LVL95:
 457:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 777              		.loc 1 457 0
 778 001a FAE7     		b	.L80
 779              		.cfi_endproc
 780              	.LFE157:
ARM GAS  /tmp/ccOKt3bg.s 			page 23


 782              		.section	.text.USBH_LL_SubmitURB,"ax",%progbits
 783              		.align	1
 784              		.global	USBH_LL_SubmitURB
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv5-sp-d16
 790              	USBH_LL_SubmitURB:
 791              	.LFB158:
 467:Src/usbh_conf.c **** 
 468:Src/usbh_conf.c **** /**
 469:Src/usbh_conf.c ****   * @brief  Submit a new URB to the low level driver.
 470:Src/usbh_conf.c ****   * @param  phost: Host handle
 471:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 472:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 473:Src/usbh_conf.c ****   * @param  direction : Channel number
 474:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 475:Src/usbh_conf.c ****   *           0 : Output
 476:Src/usbh_conf.c ****   *           1 : Input
 477:Src/usbh_conf.c ****   * @param  ep_type : Endpoint Type
 478:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 479:Src/usbh_conf.c ****   *            @arg EP_TYPE_CTRL: Control type
 480:Src/usbh_conf.c ****   *            @arg EP_TYPE_ISOC: Isochrounous type
 481:Src/usbh_conf.c ****   *            @arg EP_TYPE_BULK: Bulk type
 482:Src/usbh_conf.c ****   *            @arg EP_TYPE_INTR: Interrupt type
 483:Src/usbh_conf.c ****   * @param  token : Endpoint Type
 484:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 485:Src/usbh_conf.c ****   *            @arg 0: PID_SETUP
 486:Src/usbh_conf.c ****   *            @arg 1: PID_DATA
 487:Src/usbh_conf.c ****   * @param  pbuff : pointer to URB data
 488:Src/usbh_conf.c ****   * @param  length : Length of URB data
 489:Src/usbh_conf.c ****   * @param  do_ping : activate do ping protocol (for high speed only)
 490:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 491:Src/usbh_conf.c ****   *           0 : do ping inactive
 492:Src/usbh_conf.c ****   *           1 : do ping active
 493:Src/usbh_conf.c ****   * @retval Status
 494:Src/usbh_conf.c ****   */
 495:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SubmitURB(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t direction,
 496:Src/usbh_conf.c ****                                      uint8_t ep_type, uint8_t token, uint8_t *pbuff, uint16_t lengt
 497:Src/usbh_conf.c ****                                      uint8_t do_ping)
 498:Src/usbh_conf.c **** {
 792              		.loc 1 498 0
 793              		.cfi_startproc
 794              		@ args = 16, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              	.LVL96:
 797 0000 10B5     		push	{r4, lr}
 798              	.LCFI20:
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 4, -8
 801              		.cfi_offset 14, -4
 802 0002 84B0     		sub	sp, sp, #16
 803              	.LCFI21:
 804              		.cfi_def_cfa_offset 24
 805              	.LVL97:
 499:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 500:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
ARM GAS  /tmp/ccOKt3bg.s 			page 24


 501:Src/usbh_conf.c **** 
 502:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_SubmitRequest(phost->pData, pipe, direction ,
 806              		.loc 1 502 0
 807 0004 D0F8C003 		ldr	r0, [r0, #960]
 808              	.LVL98:
 809 0008 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 810 000c 0394     		str	r4, [sp, #12]
 811 000e BDF82040 		ldrh	r4, [sp, #32]
 812 0012 0294     		str	r4, [sp, #8]
 813 0014 079C     		ldr	r4, [sp, #28]
 814 0016 0194     		str	r4, [sp, #4]
 815 0018 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 816 001c 0094     		str	r4, [sp]
 817 001e FFF7FEFF 		bl	HAL_HCD_HC_SubmitRequest
 818              	.LVL99:
 503:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 504:Src/usbh_conf.c ****                                         do_ping);
 505:Src/usbh_conf.c **** 
 506:Src/usbh_conf.c ****   switch (hal_status) {
 819              		.loc 1 506 0
 820 0022 20B1     		cbz	r0, .L88
 821 0024 0228     		cmp	r0, #2
 822 0026 04D0     		beq	.L89
 507:Src/usbh_conf.c ****     case HAL_OK :
 508:Src/usbh_conf.c ****       usb_status = USBH_OK;
 509:Src/usbh_conf.c ****     break;
 510:Src/usbh_conf.c ****     case HAL_ERROR :
 511:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 823              		.loc 1 511 0
 824 0028 0220     		movs	r0, #2
 825              	.LVL100:
 826              	.L87:
 512:Src/usbh_conf.c ****     break;
 513:Src/usbh_conf.c ****     case HAL_BUSY :
 514:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 515:Src/usbh_conf.c ****     break;
 516:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 517:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 518:Src/usbh_conf.c ****     break;
 519:Src/usbh_conf.c ****     default :
 520:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 521:Src/usbh_conf.c ****     break;
 522:Src/usbh_conf.c ****   }
 523:Src/usbh_conf.c ****   return usb_status;
 524:Src/usbh_conf.c **** }
 827              		.loc 1 524 0
 828 002a 04B0     		add	sp, sp, #16
 829              	.LCFI22:
 830              		.cfi_remember_state
 831              		.cfi_def_cfa_offset 8
 832              		@ sp needed
 833 002c 10BD     		pop	{r4, pc}
 834              	.LVL101:
 835              	.L88:
 836              	.LCFI23:
 837              		.cfi_restore_state
 508:Src/usbh_conf.c ****     break;
ARM GAS  /tmp/ccOKt3bg.s 			page 25


 838              		.loc 1 508 0
 839 002e 0020     		movs	r0, #0
 840              	.LVL102:
 841 0030 FBE7     		b	.L87
 842              	.LVL103:
 843              	.L89:
 514:Src/usbh_conf.c ****     break;
 844              		.loc 1 514 0
 845 0032 0120     		movs	r0, #1
 846              	.LVL104:
 515:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 847              		.loc 1 515 0
 848 0034 F9E7     		b	.L87
 849              		.cfi_endproc
 850              	.LFE158:
 852              		.section	.text.USBH_LL_GetURBState,"ax",%progbits
 853              		.align	1
 854              		.global	USBH_LL_GetURBState
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 858              		.fpu fpv5-sp-d16
 860              	USBH_LL_GetURBState:
 861              	.LFB159:
 525:Src/usbh_conf.c **** 
 526:Src/usbh_conf.c **** /**
 527:Src/usbh_conf.c ****   * @brief  Get a URB state from the low level driver.
 528:Src/usbh_conf.c ****   * @param  phost: Host handle
 529:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 530:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 531:Src/usbh_conf.c ****   * @retval URB state
 532:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 533:Src/usbh_conf.c ****   *            @arg URB_IDLE
 534:Src/usbh_conf.c ****   *            @arg URB_DONE
 535:Src/usbh_conf.c ****   *            @arg URB_NOTREADY
 536:Src/usbh_conf.c ****   *            @arg URB_NYET
 537:Src/usbh_conf.c ****   *            @arg URB_ERROR
 538:Src/usbh_conf.c ****   *            @arg URB_STALL
 539:Src/usbh_conf.c ****   */
 540:Src/usbh_conf.c **** USBH_URBStateTypeDef USBH_LL_GetURBState(USBH_HandleTypeDef *phost, uint8_t pipe)
 541:Src/usbh_conf.c **** {
 862              		.loc 1 541 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              	.LVL105:
 867 0000 08B5     		push	{r3, lr}
 868              	.LCFI24:
 869              		.cfi_def_cfa_offset 8
 870              		.cfi_offset 3, -8
 871              		.cfi_offset 14, -4
 542:Src/usbh_conf.c ****   return (USBH_URBStateTypeDef)HAL_HCD_HC_GetURBState (phost->pData, pipe);
 872              		.loc 1 542 0
 873 0002 D0F8C003 		ldr	r0, [r0, #960]
 874              	.LVL106:
 875 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetURBState
 876              	.LVL107:
ARM GAS  /tmp/ccOKt3bg.s 			page 26


 543:Src/usbh_conf.c **** }
 877              		.loc 1 543 0
 878 000a 08BD     		pop	{r3, pc}
 879              		.cfi_endproc
 880              	.LFE159:
 882              		.section	.text.USBH_LL_DriverVBUS,"ax",%progbits
 883              		.align	1
 884              		.global	USBH_LL_DriverVBUS
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu fpv5-sp-d16
 890              	USBH_LL_DriverVBUS:
 891              	.LFB160:
 544:Src/usbh_conf.c **** 
 545:Src/usbh_conf.c **** /**
 546:Src/usbh_conf.c ****   * @brief  Drive VBUS.
 547:Src/usbh_conf.c ****   * @param  phost: Host handle
 548:Src/usbh_conf.c ****   * @param  state : VBUS state
 549:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 550:Src/usbh_conf.c ****   *           0 : VBUS Active
 551:Src/usbh_conf.c ****   *           1 : VBUS Inactive
 552:Src/usbh_conf.c ****   * @retval Status
 553:Src/usbh_conf.c ****   */
 554:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DriverVBUS(USBH_HandleTypeDef *phost, uint8_t state)
 555:Src/usbh_conf.c **** {
 892              		.loc 1 555 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              	.LVL108:
 897 0000 08B5     		push	{r3, lr}
 898              	.LCFI25:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 3, -8
 901              		.cfi_offset 14, -4
 556:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 902              		.loc 1 556 0
 903 0002 90F8BC33 		ldrb	r3, [r0, #956]	@ zero_extendqisi2
 904 0006 012B     		cmp	r3, #1
 905 0008 04D0     		beq	.L98
 906              	.LVL109:
 907              	.L96:
 557:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 558:Src/usbh_conf.c ****   }
 559:Src/usbh_conf.c **** 
 560:Src/usbh_conf.c ****   /* USER CODE BEGIN 0 */
 561:Src/usbh_conf.c **** 
 562:Src/usbh_conf.c ****   /* USER CODE END 0*/
 563:Src/usbh_conf.c **** 
 564:Src/usbh_conf.c ****   HAL_Delay(200);
 908              		.loc 1 564 0
 909 000a C820     		movs	r0, #200
 910 000c FFF7FEFF 		bl	HAL_Delay
 911              	.LVL110:
 565:Src/usbh_conf.c ****   return USBH_OK;
 566:Src/usbh_conf.c **** }
ARM GAS  /tmp/ccOKt3bg.s 			page 27


 912              		.loc 1 566 0
 913 0010 0020     		movs	r0, #0
 914 0012 08BD     		pop	{r3, pc}
 915              	.LVL111:
 916              	.L98:
 557:Src/usbh_conf.c ****     MX_DriverVbusFS(state);
 917              		.loc 1 557 0
 918 0014 0846     		mov	r0, r1
 919              	.LVL112:
 920 0016 FFF7FEFF 		bl	MX_DriverVbusFS
 921              	.LVL113:
 922 001a F6E7     		b	.L96
 923              		.cfi_endproc
 924              	.LFE160:
 926              		.section	.text.USBH_LL_SetToggle,"ax",%progbits
 927              		.align	1
 928              		.global	USBH_LL_SetToggle
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu fpv5-sp-d16
 934              	USBH_LL_SetToggle:
 935              	.LFB161:
 567:Src/usbh_conf.c **** 
 568:Src/usbh_conf.c **** /**
 569:Src/usbh_conf.c ****   * @brief  Set toggle for a pipe.
 570:Src/usbh_conf.c ****   * @param  phost: Host handle
 571:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 572:Src/usbh_conf.c ****   * @param  toggle: toggle (0/1)
 573:Src/usbh_conf.c ****   * @retval Status
 574:Src/usbh_conf.c ****   */
 575:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SetToggle(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t toggle)
 576:Src/usbh_conf.c **** {
 936              		.loc 1 576 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941              	.LVL114:
 942 0000 10B4     		push	{r4}
 943              	.LCFI26:
 944              		.cfi_def_cfa_offset 4
 945              		.cfi_offset 4, -4
 577:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 578:Src/usbh_conf.c ****   pHandle = phost->pData;
 946              		.loc 1 578 0
 947 0002 D0F8C033 		ldr	r3, [r0, #960]
 948              	.LVL115:
 579:Src/usbh_conf.c **** 
 580:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 949              		.loc 1 580 0
 950 0006 01EB8104 		add	r4, r1, r1, lsl #2
 951 000a E000     		lsls	r0, r4, #3
 952              	.LVL116:
 953 000c 0446     		mov	r4, r0
 954 000e 1844     		add	r0, r0, r3
 955 0010 90F83B00 		ldrb	r0, [r0, #59]	@ zero_extendqisi2
ARM GAS  /tmp/ccOKt3bg.s 			page 28


 956 0014 48B9     		cbnz	r0, .L103
 581:Src/usbh_conf.c ****   {
 582:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_in = toggle;
 583:Src/usbh_conf.c ****   }
 584:Src/usbh_conf.c ****   else
 585:Src/usbh_conf.c ****   {
 586:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_out = toggle;
 957              		.loc 1 586 0
 958 0016 01EB8101 		add	r1, r1, r1, lsl #2
 959              	.LVL117:
 960 001a C800     		lsls	r0, r1, #3
 961 001c 0344     		add	r3, r3, r0
 962              	.LVL118:
 963 001e 83F85120 		strb	r2, [r3, #81]
 964              	.LVL119:
 965              	.L101:
 587:Src/usbh_conf.c ****   }
 588:Src/usbh_conf.c **** 
 589:Src/usbh_conf.c ****   return USBH_OK;
 590:Src/usbh_conf.c **** }
 966              		.loc 1 590 0
 967 0022 0020     		movs	r0, #0
 968 0024 5DF8044B 		ldr	r4, [sp], #4
 969              	.LCFI27:
 970              		.cfi_remember_state
 971              		.cfi_restore 4
 972              		.cfi_def_cfa_offset 0
 973 0028 7047     		bx	lr
 974              	.LVL120:
 975              	.L103:
 976              	.LCFI28:
 977              		.cfi_restore_state
 582:Src/usbh_conf.c ****   }
 978              		.loc 1 582 0
 979 002a 2344     		add	r3, r3, r4
 980              	.LVL121:
 981 002c 83F85020 		strb	r2, [r3, #80]
 982              	.LVL122:
 983 0030 F7E7     		b	.L101
 984              		.cfi_endproc
 985              	.LFE161:
 987              		.section	.text.USBH_LL_GetToggle,"ax",%progbits
 988              		.align	1
 989              		.global	USBH_LL_GetToggle
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu fpv5-sp-d16
 995              	USBH_LL_GetToggle:
 996              	.LFB162:
 591:Src/usbh_conf.c **** 
 592:Src/usbh_conf.c **** /**
 593:Src/usbh_conf.c ****   * @brief  Return the current toggle of a pipe.
 594:Src/usbh_conf.c ****   * @param  phost: Host handle
 595:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 596:Src/usbh_conf.c ****   * @retval toggle (0/1)
 597:Src/usbh_conf.c ****   */
ARM GAS  /tmp/ccOKt3bg.s 			page 29


 598:Src/usbh_conf.c **** uint8_t USBH_LL_GetToggle(USBH_HandleTypeDef *phost, uint8_t pipe)
 599:Src/usbh_conf.c **** {
 997              		.loc 1 599 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002              	.LVL123:
 600:Src/usbh_conf.c ****   uint8_t toggle = 0;
 601:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 602:Src/usbh_conf.c ****   pHandle = phost->pData;
 1003              		.loc 1 602 0
 1004 0000 D0F8C033 		ldr	r3, [r0, #960]
 1005              	.LVL124:
 603:Src/usbh_conf.c **** 
 604:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 1006              		.loc 1 604 0
 1007 0004 01EB8100 		add	r0, r1, r1, lsl #2
 1008              	.LVL125:
 1009 0008 C200     		lsls	r2, r0, #3
 1010 000a 1046     		mov	r0, r2
 1011 000c 1A44     		add	r2, r2, r3
 1012 000e 92F83B20 		ldrb	r2, [r2, #59]	@ zero_extendqisi2
 1013 0012 32B9     		cbnz	r2, .L107
 605:Src/usbh_conf.c ****   {
 606:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_in;
 607:Src/usbh_conf.c ****   }
 608:Src/usbh_conf.c ****   else
 609:Src/usbh_conf.c ****   {
 610:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_out;
 1014              		.loc 1 610 0
 1015 0014 01EB8101 		add	r1, r1, r1, lsl #2
 1016              	.LVL126:
 1017 0018 CA00     		lsls	r2, r1, #3
 1018 001a 1344     		add	r3, r3, r2
 1019              	.LVL127:
 1020 001c 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1021              	.LVL128:
 611:Src/usbh_conf.c ****   }
 612:Src/usbh_conf.c ****   return toggle;
 613:Src/usbh_conf.c **** }
 1022              		.loc 1 613 0
 1023 0020 7047     		bx	lr
 1024              	.LVL129:
 1025              	.L107:
 606:Src/usbh_conf.c ****   }
 1026              		.loc 1 606 0
 1027 0022 0344     		add	r3, r3, r0
 1028              	.LVL130:
 1029 0024 93F85000 		ldrb	r0, [r3, #80]	@ zero_extendqisi2
 1030              	.LVL131:
 1031 0028 7047     		bx	lr
 1032              		.cfi_endproc
 1033              	.LFE162:
 1035              		.section	.text.USBH_Delay,"ax",%progbits
 1036              		.align	1
 1037              		.global	USBH_Delay
ARM GAS  /tmp/ccOKt3bg.s 			page 30


 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1041              		.fpu fpv5-sp-d16
 1043              	USBH_Delay:
 1044              	.LFB163:
 614:Src/usbh_conf.c **** 
 615:Src/usbh_conf.c **** /**
 616:Src/usbh_conf.c ****   * @brief  Delay routine for the USB Host Library
 617:Src/usbh_conf.c ****   * @param  Delay: Delay in ms
 618:Src/usbh_conf.c ****   * @retval None
 619:Src/usbh_conf.c ****   */
 620:Src/usbh_conf.c **** void USBH_Delay(uint32_t Delay)
 621:Src/usbh_conf.c **** {
 1045              		.loc 1 621 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              	.LVL132:
 1050 0000 08B5     		push	{r3, lr}
 1051              	.LCFI29:
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 3, -8
 1054              		.cfi_offset 14, -4
 622:Src/usbh_conf.c ****   HAL_Delay(Delay);
 1055              		.loc 1 622 0
 1056 0002 FFF7FEFF 		bl	HAL_Delay
 1057              	.LVL133:
 623:Src/usbh_conf.c **** }
 1058              		.loc 1 623 0
 1059 0006 08BD     		pop	{r3, pc}
 1060              		.cfi_endproc
 1061              	.LFE163:
 1063              		.comm	hhcd_USB_OTG_FS,664,4
 1064              		.section	.rodata.USBH_LL_Init.str1.4,"aMS",%progbits,1
 1065              		.align	2
 1066              	.LC0:
 1067 0000 5372632F 		.ascii	"Src/usbh_conf.c\000"
 1067      75736268 
 1067      5F636F6E 
 1067      662E6300 
 1068              		.text
 1069              	.Letext0:
 1070              		.file 2 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_defa
 1071              		.file 3 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1072              		.file 4 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1073              		.file 5 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include
 1074              		.file 6 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1075              		.file 7 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h
 1076              		.file 8 "/home/warranyu/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 1077              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1078              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1079              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1080              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1081              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1082              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1083              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
ARM GAS  /tmp/ccOKt3bg.s 			page 31


 1084              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_hcd.h"
 1085              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1086              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1087              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1088              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1089              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 1090              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1091              		.file 23 "Inc/usbh_platform.h"
 1092              		.file 24 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 1093              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccOKt3bg.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbh_conf.c
     /tmp/ccOKt3bg.s:18     .text.HAL_HCD_MspInit:0000000000000000 $t
     /tmp/ccOKt3bg.s:25     .text.HAL_HCD_MspInit:0000000000000000 HAL_HCD_MspInit
     /tmp/ccOKt3bg.s:108    .text.HAL_HCD_MspInit:0000000000000068 $d
     /tmp/ccOKt3bg.s:114    .text.HAL_HCD_MspDeInit:0000000000000000 $t
     /tmp/ccOKt3bg.s:121    .text.HAL_HCD_MspDeInit:0000000000000000 HAL_HCD_MspDeInit
     /tmp/ccOKt3bg.s:163    .text.HAL_HCD_MspDeInit:0000000000000028 $d
     /tmp/ccOKt3bg.s:169    .text.HAL_HCD_SOF_Callback:0000000000000000 $t
     /tmp/ccOKt3bg.s:176    .text.HAL_HCD_SOF_Callback:0000000000000000 HAL_HCD_SOF_Callback
     /tmp/ccOKt3bg.s:199    .text.HAL_HCD_Connect_Callback:0000000000000000 $t
     /tmp/ccOKt3bg.s:206    .text.HAL_HCD_Connect_Callback:0000000000000000 HAL_HCD_Connect_Callback
     /tmp/ccOKt3bg.s:229    .text.HAL_HCD_Disconnect_Callback:0000000000000000 $t
     /tmp/ccOKt3bg.s:236    .text.HAL_HCD_Disconnect_Callback:0000000000000000 HAL_HCD_Disconnect_Callback
     /tmp/ccOKt3bg.s:259    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 $t
     /tmp/ccOKt3bg.s:266    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 HAL_HCD_HC_NotifyURBChange_Callback
     /tmp/ccOKt3bg.s:289    .text.USBH_LL_Init:0000000000000000 $t
     /tmp/ccOKt3bg.s:296    .text.USBH_LL_Init:0000000000000000 USBH_LL_Init
     /tmp/ccOKt3bg.s:370    .text.USBH_LL_Init:0000000000000054 $d
                            *COM*:0000000000000298 hhcd_USB_OTG_FS
     /tmp/ccOKt3bg.s:376    .text.USBH_LL_DeInit:0000000000000000 $t
     /tmp/ccOKt3bg.s:383    .text.USBH_LL_DeInit:0000000000000000 USBH_LL_DeInit
     /tmp/ccOKt3bg.s:428    .text.USBH_LL_Start:0000000000000000 $t
     /tmp/ccOKt3bg.s:435    .text.USBH_LL_Start:0000000000000000 USBH_LL_Start
     /tmp/ccOKt3bg.s:480    .text.USBH_LL_Stop:0000000000000000 $t
     /tmp/ccOKt3bg.s:487    .text.USBH_LL_Stop:0000000000000000 USBH_LL_Stop
     /tmp/ccOKt3bg.s:532    .text.USBH_LL_GetSpeed:0000000000000000 $t
     /tmp/ccOKt3bg.s:539    .text.USBH_LL_GetSpeed:0000000000000000 USBH_LL_GetSpeed
     /tmp/ccOKt3bg.s:581    .text.USBH_LL_ResetPort:0000000000000000 $t
     /tmp/ccOKt3bg.s:588    .text.USBH_LL_ResetPort:0000000000000000 USBH_LL_ResetPort
     /tmp/ccOKt3bg.s:633    .text.USBH_LL_GetLastXferSize:0000000000000000 $t
     /tmp/ccOKt3bg.s:640    .text.USBH_LL_GetLastXferSize:0000000000000000 USBH_LL_GetLastXferSize
     /tmp/ccOKt3bg.s:663    .text.USBH_LL_OpenPipe:0000000000000000 $t
     /tmp/ccOKt3bg.s:670    .text.USBH_LL_OpenPipe:0000000000000000 USBH_LL_OpenPipe
     /tmp/ccOKt3bg.s:731    .text.USBH_LL_ClosePipe:0000000000000000 $t
     /tmp/ccOKt3bg.s:738    .text.USBH_LL_ClosePipe:0000000000000000 USBH_LL_ClosePipe
     /tmp/ccOKt3bg.s:783    .text.USBH_LL_SubmitURB:0000000000000000 $t
     /tmp/ccOKt3bg.s:790    .text.USBH_LL_SubmitURB:0000000000000000 USBH_LL_SubmitURB
     /tmp/ccOKt3bg.s:853    .text.USBH_LL_GetURBState:0000000000000000 $t
     /tmp/ccOKt3bg.s:860    .text.USBH_LL_GetURBState:0000000000000000 USBH_LL_GetURBState
     /tmp/ccOKt3bg.s:883    .text.USBH_LL_DriverVBUS:0000000000000000 $t
     /tmp/ccOKt3bg.s:890    .text.USBH_LL_DriverVBUS:0000000000000000 USBH_LL_DriverVBUS
     /tmp/ccOKt3bg.s:927    .text.USBH_LL_SetToggle:0000000000000000 $t
     /tmp/ccOKt3bg.s:934    .text.USBH_LL_SetToggle:0000000000000000 USBH_LL_SetToggle
     /tmp/ccOKt3bg.s:988    .text.USBH_LL_GetToggle:0000000000000000 $t
     /tmp/ccOKt3bg.s:995    .text.USBH_LL_GetToggle:0000000000000000 USBH_LL_GetToggle
     /tmp/ccOKt3bg.s:1036   .text.USBH_Delay:0000000000000000 $t
     /tmp/ccOKt3bg.s:1043   .text.USBH_Delay:0000000000000000 USBH_Delay
     /tmp/ccOKt3bg.s:1065   .rodata.USBH_LL_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
USBH_LL_IncTimer
ARM GAS  /tmp/ccOKt3bg.s 			page 33


USBH_LL_Connect
USBH_LL_Disconnect
USBH_LL_NotifyURBChange
HAL_HCD_Init
HAL_HCD_GetCurrentFrame
USBH_LL_SetTimer
_Error_Handler
HAL_HCD_DeInit
HAL_HCD_Start
HAL_HCD_Stop
HAL_HCD_GetCurrentSpeed
HAL_HCD_ResetPort
HAL_HCD_HC_GetXferCount
HAL_HCD_HC_Init
HAL_HCD_HC_Halt
HAL_HCD_HC_SubmitRequest
HAL_HCD_HC_GetURBState
HAL_Delay
MX_DriverVbusFS
